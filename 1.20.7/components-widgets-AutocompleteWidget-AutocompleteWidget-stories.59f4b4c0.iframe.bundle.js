"use strict";(self.webpackChunk_nfdi4health_semlookp_widgets=self.webpackChunk_nfdi4health_semlookp_widgets||[]).push([[38297],{"./node_modules/@elastic/eui/es/components/popover/popover_panel/_popover_panel.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{X:()=>EuiPopoverPanel});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),hooks=__webpack_require__("./node_modules/@elastic/eui/es/services/theme/hooks.js"),panel=__webpack_require__("./node_modules/@elastic/eui/es/components/panel/panel.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),shadow=__webpack_require__("./node_modules/@elastic/eui/es/themes/amsterdam/global_styling/mixins/shadow.js"),logicals=__webpack_require__("./node_modules/@elastic/eui/es/global_styling/functions/logicals.js"),animations=__webpack_require__("./node_modules/@elastic/eui/es/global_styling/variables/animations.js"),_excluded=["children","className","isOpen","isAttached","position"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var EuiPopoverPanelContext=(0,react.createContext)({paddingSize:"l"}),EuiPopoverPanel=function EuiPopoverPanel(_ref){var children=_ref.children,className=_ref.className,isOpen=_ref.isOpen,isAttached=_ref.isAttached,position=_ref.position,rest=_objectWithoutProperties(_ref,_excluded),panelContext=(0,react.useContext)(EuiPopoverPanelContext);rest.paddingSize&&(panelContext.paddingSize=rest.paddingSize);var euiThemeContext=(0,hooks.g)(),classes=classnames_default()("euiPopover__panel",className),styles=function euiPopoverPanelStyles(euiThemeContext){var euiTheme=euiThemeContext.euiTheme;return{euiPopover__panel:(0,emotion_react_browser_esm.AH)("position:absolute;",(0,logicals.l1)("min-width","".concat(7*euiTheme.base,"px")),";",(0,logicals.l1)("max-width","calc(100vw - ".concat(euiTheme.size.xl,")")),";backface-visibility:hidden;pointer-events:none;opacity:0;transform:translateY(0) translateX(0) translateZ(0);",(0,shadow.Ri)(euiThemeContext,{property:"filter"})," &:focus{outline-offset:0;};label:euiPopover__panel;"),isOpen:(0,emotion_react_browser_esm.AH)("opacity:1;pointer-events:auto;",animations.VT,"{transition:opacity ",euiTheme.animation.bounce," ",euiTheme.animation.slow,",transform ",euiTheme.animation.bounce," calc(",euiTheme.animation.slow," + 100ms);};label:isOpen;"),top:(0,emotion_react_browser_esm.AH)("transform:translateY(",euiTheme.size.s,") translateZ(0);;label:top;"),bottom:(0,emotion_react_browser_esm.AH)("transform:translateY(-",euiTheme.size.s,") translateZ(0);;label:bottom;"),left:(0,emotion_react_browser_esm.AH)("transform:translateX(",euiTheme.size.s,") translateZ(0);;label:left;"),right:(0,emotion_react_browser_esm.AH)("transform:translateX(-",euiTheme.size.s,") translateZ(0);;label:right;"),attached:{isOpen:(0,emotion_react_browser_esm.AH)("filter:none;",animations.VT,"{transition:opacity ",euiTheme.animation.bounce," ",euiTheme.animation.slow,";};label:isOpen;"),top:(0,emotion_react_browser_esm.AH)((0,shadow.V8)(euiThemeContext),";;label:top;"),bottom:(0,emotion_react_browser_esm.AH)((0,shadow.Q2)(euiThemeContext,"m"),";;label:bottom;"),left:(0,emotion_react_browser_esm.AH)(";label:left;"),right:(0,emotion_react_browser_esm.AH)(";label:right;")}}}(euiThemeContext),panelCSS=[styles.euiPopover__panel,isOpen&&styles.isOpen,isOpen&&position&&styles[position]];return isAttached&&(panelCSS=[].concat(_toConsumableArray(panelCSS),[isOpen&&styles.attached.isOpen,position&&styles.attached[position]])),(0,emotion_react_browser_esm.Y)(EuiPopoverPanelContext.Provider,{value:panelContext},(0,emotion_react_browser_esm.Y)(panel.K6,_extends({className:classes,css:panelCSS,"data-popover-panel":!0,"data-popover-open":isOpen||void 0},rest),children))};EuiPopoverPanel.propTypes={element:prop_types_default().oneOf(["div"]),hasShadow:prop_types_default().bool,hasBorder:prop_types_default().bool,paddingSize:prop_types_default().any,borderRadius:prop_types_default().any,grow:prop_types_default().bool,panelRef:prop_types_default().any,color:prop_types_default().any,className:prop_types_default().string,"aria-label":prop_types_default().string,"data-test-subj":prop_types_default().string,isOpen:prop_types_default().bool,isAttached:prop_types_default().bool,position:prop_types_default().oneOfType([prop_types_default().any.isRequired,prop_types_default().oneOf([null])])}},"./src/components/widgets/AutocompleteWidget/AutocompleteWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllowAddingCustomTerms:()=>AllowAddingCustomTerms,DisplaySelectedEntityWithLongForm:()=>DisplaySelectedEntityWithLongForm,WithCustomValue:()=>WithCustomValue,WithDefaults:()=>WithDefaults,WithDescriptionAndShortForm:()=>WithDescriptionAndShortForm,WithGermanInput:()=>WithGermanInput,__namedExportsOrder:()=>__namedExportsOrder,allowMultipleTerms:()=>allowMultipleTerms,default:()=>__WEBPACK_DEFAULT_EXPORT__,withInvalidValue:()=>withInvalidValue,withMultipleValues:()=>withMultipleValues,withValue:()=>withValue});__webpack_require__("./node_modules/react/index.js");var _AutocompleteWidget__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/widgets/AutocompleteWidget/AutocompleteWidget.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Autocomplete Widget",component:_AutocompleteWidget__WEBPACK_IMPORTED_MODULE_1__.f,argTypes:{api:{control:{type:"radio"},options:["https://www.ebi.ac.uk/ols4/api/","https://semanticlookup.zbmed.de/ols/api/","https://semanticlookup.zbmed.de/api/"]},selectionChangedEvent:{action:"selectionChangedEvent"},placeholder:{defaultValue:"Search for Term"},preselected:{},parameter:{},hasShortSelectedLabel:{type:{required:!1}},allowCustomTerms:{type:{required:!1}},singleSelection:{type:{required:!1}}},args:{api:"https://semanticlookup.zbmed.de/ols/api/",parameter:"ontology=mesh,efo&type=class&collection=nfdi4health&fieldList=description,label,iri,ontology_name,type,short_form",hasShortSelectedLabel:!0,allowCustomTerms:!1,singleSelection:!0}},Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_AutocompleteWidget__WEBPACK_IMPORTED_MODULE_1__.f,{...args});Template.displayName="Template";const WithDefaults=Template.bind({}),withValue=Template.bind({});withValue.args={preselected:[{iri:"http://purl.bioontology.org/ontology/MESH/D000086382"}]};const WithCustomValue=Template.bind({});WithCustomValue.args={allowCustomTerms:!0,preselected:[{label:"freetext"}]};const withInvalidValue=Template.bind({});withInvalidValue.args={preselected:[{iri:"ht3stp://purl.bioontology.org/ontology/MESH/D000086382"}]};const WithGermanInput=Template.bind({});WithGermanInput.args={api:"https://semanticlookup.zbmed.de/api/",parameter:"collection=nfdi4health&lang=de&type=class"};const WithDescriptionAndShortForm=Template.bind({});WithDescriptionAndShortForm.args={api:"https://semanticlookup.zbmed.de/api/",parameter:"fieldList=description,label,iri,ontology_name,type,short_form"};const DisplaySelectedEntityWithLongForm=Template.bind({});DisplaySelectedEntityWithLongForm.args={hasShortSelectedLabel:!1};const AllowAddingCustomTerms=Template.bind({});AllowAddingCustomTerms.args={allowCustomTerms:!0};const allowMultipleTerms=Template.bind({});allowMultipleTerms.args={singleSelection:!1};const withMultipleValues=Template.bind({});withMultipleValues.args={preselected:[{iri:"http://purl.bioontology.org/ontology/MESH/D000086382"},{iri:"http://purl.bioontology.org/ontology/MESH/D003920"}],singleSelection:!1},WithDefaults.parameters={...WithDefaults.parameters,docs:{...WithDefaults.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...WithDefaults.parameters?.docs?.source}}},withValue.parameters={...withValue.parameters,docs:{...withValue.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...withValue.parameters?.docs?.source}}},WithCustomValue.parameters={...WithCustomValue.parameters,docs:{...WithCustomValue.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...WithCustomValue.parameters?.docs?.source}}},withInvalidValue.parameters={...withInvalidValue.parameters,docs:{...withInvalidValue.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...withInvalidValue.parameters?.docs?.source}}},WithGermanInput.parameters={...WithGermanInput.parameters,docs:{...WithGermanInput.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...WithGermanInput.parameters?.docs?.source}}},WithDescriptionAndShortForm.parameters={...WithDescriptionAndShortForm.parameters,docs:{...WithDescriptionAndShortForm.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...WithDescriptionAndShortForm.parameters?.docs?.source}}},DisplaySelectedEntityWithLongForm.parameters={...DisplaySelectedEntityWithLongForm.parameters,docs:{...DisplaySelectedEntityWithLongForm.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...DisplaySelectedEntityWithLongForm.parameters?.docs?.source}}},AllowAddingCustomTerms.parameters={...AllowAddingCustomTerms.parameters,docs:{...AllowAddingCustomTerms.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...AllowAddingCustomTerms.parameters?.docs?.source}}},allowMultipleTerms.parameters={...allowMultipleTerms.parameters,docs:{...allowMultipleTerms.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...allowMultipleTerms.parameters?.docs?.source}}},withMultipleValues.parameters={...withMultipleValues.parameters,docs:{...withMultipleValues.parameters?.docs,source:{originalSource:"(args: AutocompleteWidgetProps) => <AutocompleteWidget {...args} />",...withMultipleValues.parameters?.docs?.source}}};const __namedExportsOrder=["WithDefaults","withValue","WithCustomValue","withInvalidValue","WithGermanInput","WithDescriptionAndShortForm","DisplaySelectedEntityWithLongForm","AllowAddingCustomTerms","allowMultipleTerms","withMultipleValues"]}}]);