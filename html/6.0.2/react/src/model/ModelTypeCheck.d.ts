import { Thing, Entity, Class, Property, Individual, Ontology } from './interfaces';
export declare const classTypeNames: readonly ["class", "term"];
export declare const propertyTypeNames: readonly ["property", "annotationProperty", "dataProperty", "objectProperty"];
export declare const individualTypeNames: readonly ["individual"];
export declare const ontologyTypeNames: readonly ["ontology"];
export declare const entityTypeNames: readonly ["class", "term", "individual", "property", "annotationProperty", "dataProperty", "objectProperty"];
export declare const thingTypeNames: readonly ["class", "term", "individual", "property", "annotationProperty", "dataProperty", "objectProperty", "ontology"];
export type ClassTypeName = (typeof classTypeNames)[number];
export type PropertyTypeName = (typeof propertyTypeNames)[number];
export type IndividualTypeName = (typeof individualTypeNames)[number];
export type OntologyTypeName = (typeof ontologyTypeNames)[number];
export type EntityTypeName = (typeof entityTypeNames)[number];
export type ThingTypeName = (typeof thingTypeNames)[number];
export declare function isClassTypeName(type: string): type is ClassTypeName;
export declare function isPropertyTypeName(type: string): type is PropertyTypeName;
export declare function isIndividualTypeName(type: string): type is IndividualTypeName;
export declare function isOntologyTypeName(type: string): type is OntologyTypeName;
export declare function isEntityTypeName(type: string): type is EntityTypeName;
export declare function isThingTypeName(type: string): type is ThingTypeName;
export declare function isClass(thing: Thing): thing is Class;
export declare function isProperty(thing: Thing): thing is Property;
export declare function isIndividual(thing: Thing): thing is Individual;
export declare function isEntity(thing: Thing): thing is Entity;
export declare function isOntology(thing: Thing): thing is Ontology;
