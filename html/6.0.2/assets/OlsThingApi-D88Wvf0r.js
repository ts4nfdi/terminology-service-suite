var a=Object.defineProperty;var c=(s,e,t)=>e in s?a(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var r=(s,e,t)=>c(s,typeof e!="symbol"?e+"":e,t);import{aL as h,O as l,r as y,cz as p,cA as w,cB as f,cC as g,cD as v,cE as O,cF as b}from"./storyArgs-AFjXh7XW.js";class E{constructor(e){r(this,"axiosInstance");r(this,"entityService");r(this,"ontologyService");this.axiosInstance=typeof e=="string"?h.create({baseURL:e,headers:{Accept:"application/json"}}):e,this.entityService=new l(this.axiosInstance),this.ontologyService=new y(this.axiosInstance)}async makeCall(e,t,i){const n=b(i)?"":"v2/",o=(await this.axiosInstance.get(n+e,t)).data;return p(o)}async getThingObject(e,t,i,n,o){if(t)if(w(t)){if(i)return await this.ontologyService.getOntologyObject(i,n,o);throw new Error(`ontologyId has to be provided if thingType in {"${f.join('", "')}"}.`)}else if(g(t)){if(e)return await this.entityService.getEntityObject(e,t,i,n,o);throw new Error(`iri has to be provided if thingType in {"${v.join('", "')}"}.`)}else throw new Error(`Unsupported thingType "${t}" provided. Must be in {"${O.join('", "')}"}.`);else{if(!e&&i)return await this.ontologyService.getOntologyObject(i,n,o);if(e)return await this.entityService.getEntityObject(e,t,i,n,o);throw new Error("iri or ontologyId has to be provided if thingType is not provided.")}}}export{E as O};
