import"./terminology-service-suite.min-DUYVJAsv.js";import{b as y}from"./index-L2N5pzd4.js";import{e as u}from"./ModelTypeCheck-Cd-4DVPN.js";import"./_commonjsHelpers-Cpj98o6Y.js";function c(t){Promise.resolve().then(t).catch(function(e){return setTimeout(function(){throw e})})}var p=function(){function t(){this.queue=[],this.transactions=0,this.notifyFn=function(o){o()},this.batchNotifyFn=function(o){o()}}var e=t.prototype;return e.batch=function(i){var n;this.transactions++;try{n=i()}finally{this.transactions--,this.transactions||this.flush()}return n},e.schedule=function(i){var n=this;this.transactions?this.queue.push(i):c(function(){n.notifyFn(i)})},e.batchCalls=function(i){var n=this;return function(){for(var r=arguments.length,l=new Array(r),s=0;s<r;s++)l[s]=arguments[s];n.schedule(function(){i.apply(void 0,l)})}},e.flush=function(){var i=this,n=this.queue;this.queue=[],n.length&&c(function(){i.batchNotifyFn(function(){n.forEach(function(r){i.notifyFn(r)})})})},e.setNotifyFunction=function(i){this.notifyFn=i},e.setBatchNotifyFunction=function(i){this.batchNotifyFn=i},t}(),d=new p,h=y.unstable_batchedUpdates;d.setBatchNotifyFunction(h);const a={INCLUDE_OBSOLETE_ENTITIES:!1,PREFERRED_ROOTS:!1,KEEP_EXPANSION_STATES:!1,SHOW_SIBLINGS_ON_INIT:!1,USE_LEGACY:!1},f={apiUrl:{},backendType:{control:{type:"radio"},options:["ols","skosmos","ontoportal"],table:{defaultValue:{summary:"ols"}}},apiKey:{table:{defaultValue:{summary:void 0}}},onNavigateToEntity:{control:{disabled:!0},table:{defaultValue:{summary:void 0}}},onNavigateToOntology:{control:{disabled:!0},table:{defaultValue:{summary:void 0}}},iri:{table:{defaultValue:{summary:void 0}}},ontologyId:{table:{defaultValue:{summary:void 0}}},entityType:{table:{type:{summary:`${u.join(" | ")}`},defaultValue:{summary:void 0}},control:{type:"radio"},options:["ontology","term","class","property","individual",void 0,"INVALID STRING"]},includeObsoleteEntities:{table:{defaultValue:{summary:a.INCLUDE_OBSOLETE_ENTITIES}}},preferredRoots:{table:{defaultValue:{summary:a.PREFERRED_ROOTS}}},keepExpansionStates:{table:{defaultValue:{summary:a.KEEP_EXPANSION_STATES}}},showSiblingsOnInit:{table:{defaultValue:{summary:a.SHOW_SIBLINGS_ON_INIT}}},useLegacy:{table:{defaultValue:{summary:a.USE_LEGACY}}}},b={apiUrl:{},backendType:{},apiKey:{},onNavigateToEntity:(t,e,o)=>{console.log(`Triggered onNavigateToEntity() for ${e||"entity"} "${o.label}" (iri="${o.iri}").`)},onNavigateToOntology:(t,e,o)=>{console.log(`Trigerred onNavigateToOntology() for ${e||"entity"} "${o.label}" (iri="${o.iri}") and ontologyId "${t}".`)},iri:"",ontologyId:"",entityType:"",includeObsoleteEntities:a.INCLUDE_OBSOLETE_ENTITIES,preferredRoots:a.PREFERRED_ROOTS,keepExpansionStates:a.KEEP_EXPANSION_STATES,showSiblingsOnInit:a.SHOW_SIBLINGS_ON_INIT,useLegacy:a.USE_LEGACY},_={args:{apiUrl:"https://www.ebi.ac.uk/ols4/api",backendType:"ols",iri:"http://www.ebi.ac.uk/efo/EFO_0000400",entityType:"class",ontologyId:"efo"}},N={args:{apiUrl:"https://www.ebi.ac.uk/ols4/api",backendType:"ols",iri:"http://purl.obolibrary.org/obo/IAO_0000120",entityType:"individual",ontologyId:"bco"}},O={args:{apiUrl:"https://www.ebi.ac.uk/ols4/api",backendType:"ols",iri:"",entityType:"class",ontologyId:"uberon",preferredRoots:!0}},v={args:{apiUrl:"https://www.ebi.ac.uk/ols4/api",backendType:"ols",iri:"",entityType:"class",ontologyId:"uberon",includeObsoleteEntities:!0}},w={args:{apiUrl:"https://www.ebi.ac.uk/ols4/api",backendType:"ols",iri:"",entityType:"property",ontologyId:"bco"}},k={args:{apiUrl:"https://www.ebi.ac.uk/ols4/api",backendType:"ols",iri:"",entityType:"individual",ontologyId:"bco"}},R={args:{apiUrl:"https://www.ebi.ac.uk/ols4/api",backendType:"ols",iri:"http://purl.obolibrary.org/obo/UBERON_2001747",entityType:"class",ontologyId:"uberon"}},U={args:{apiUrl:"https://api.finto.fi/rest/v1",backendType:"skosmos",iri:"http://www.yso.fi/onto/yso/p864",ontologyId:"yso"}},L={args:{apiUrl:"https://data.biodivportal.gfbio.org",backendType:"ontoportal",iri:"http://terminologies.gfbio.org/terms/IOC_Strigops-habroptila",ontologyId:"IOC",entityType:"class",apiKey:""}};let g=0;function E(){return g++}const $={title:"HierarchyWidget",tags:["autodocs"],parameters:{layout:"centered"},render:t=>{const e=E();return`        
<div id="hierarchy_semlookp_container_${e}"></div>

<script type="text/javascript">
window['SemLookPWidgets'].createHierarchy(
    {
        apiUrl:"${t.apiUrl}",
        apiKey:"${t.apiKey}",
        backendType:"${t.backendType}",
        iri:"${t.iri}",
        entityType:"${t.entityType}",
        ontologyId:"${t.ontologyId}",
        includeObsoleteEntities:${t.includeObsoleteEntities},
        useLegacy:${t.useLegacy},
        preferredRoots:${t.preferredRoots},
        keepExpansionStates:${t.keepExpansionStates},
        showSiblingsOnInit:${t.showSiblingsOnInit},
        onNavigateToEntity:${t.onNavigateToEntity},
        onNavigateToOntology:${t.onNavigateToOntology}
    },
    document.querySelector('#hierarchy_semlookp_container_${e}')
)
<\/script>
        `},argTypes:f,args:b},H=["ClassHierarchy","IndividualHierarchy","PreferredRoots","IncludeObsoleteEntities","PropertyRoots","IndividualRoots","LargeHierarchy","SkosHierarchy","OntoportalHierarchy"];export{_ as ClassHierarchy,v as IncludeObsoleteEntities,N as IndividualHierarchy,k as IndividualRoots,R as LargeHierarchy,L as OntoportalHierarchy,O as PreferredRoots,w as PropertyRoots,U as SkosHierarchy,H as __namedExportsOrder,$ as default};
