/*! For license information please see components-widgets-MetadataWidget-TabWidget-HierarchyWidget-HierarchyWidget-stories.28a1a3b0.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_nfdi4health_semlookp_widgets=self.webpackChunk_nfdi4health_semlookp_widgets||[]).push([[15957],{"./node_modules/@elastic/eui/es/global_styling/functions/logicals.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{BE:()=>logicals,Ff:()=>logicalTextAlignCSS,H6:()=>logicalSide,Ss:()=>logicalSizeCSS,l1:()=>logicalCSS});var _components_common__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@elastic/eui/es/components/common.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var logicalSide={left:"inline-start",right:"inline-end",top:"block-start",bottom:"block-end",horizontal:"inline",vertical:"block"},logicals=((0,_components_common__WEBPACK_IMPORTED_MODULE_0__.Y)(logicalSide),_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},{"margin-left":"margin-inline-start","margin-right":"margin-inline-end","margin-top":"margin-block-start","margin-bottom":"margin-block-end","margin-horizontal":"margin-inline","margin-vertical":"margin-block"}),{"padding-left":"padding-inline-start","padding-right":"padding-inline-end","padding-top":"padding-block-start","padding-bottom":"padding-block-end","padding-horizontal":"padding-inline","padding-vertical":"padding-block"}),{top:"inset-block-start",right:"inset-inline-end",bottom:"inset-block-end",left:"inset-inline-start",horizontal:"inset-block",vertical:"inset-inline",inset:"inset"}),{height:"block-size",width:"inline-size","max-height":"max-block-size","max-width":"max-inline-size","min-height":"min-block-size","min-width":"min-inline-size"}),{"overflow-x":"overflow-block","overflow-y":"overflow-inline"}),{"border-horizontal":"border-inline","border-horizontal-color":"border-inline-color","border-horizontal-width":"border-inline-width","border-horizontal-style":"border-inline-style","border-vertical":"border-block","border-vertical-color":"border-block-color","border-vertical-width":"border-block-width","border-vertical-style":"border-block-style","border-bottom":"border-block-end","border-bottom-color":"border-block-end-color","border-bottom-style":"border-block-end-style","border-bottom-width":"border-block-end-width","border-top":"border-block-start","border-top-color":"border-block-start-color","border-top-style":"border-block-start-style","border-top-width":"border-block-start-width","border-right":"border-inline-end","border-right-color":"border-inline-end-color","border-right-style":"border-inline-end-style","border-right-width":"border-inline-end-width","border-left":"border-inline-start","border-left-color":"border-inline-start-color","border-left-style":"border-inline-start-style","border-left-width":"border-inline-start-width","border-top-left-radius":"border-start-start-radius","border-top-right-radius":"border-start-end-radius","border-bottom-left-radius":"border-end-start-radius","border-bottom-right-radius":"border-end-end-radius"})),logicalCSS=((0,_components_common__WEBPACK_IMPORTED_MODULE_0__.Y)(logicals),function logicalCSS(property,value){return"".concat(logicals[property],": ").concat(value,";")}),logicalSizeCSS=function logicalSizeCSS(width,height){return"\n    ".concat(logicals.width,": ").concat(width,";\n    ").concat(logicals.height,": ").concat(height,";\n  ")},logicalText={"text-align":{left:"start",center:"center",right:"end"}},logicalTextAlignCSS=((0,_components_common__WEBPACK_IMPORTED_MODULE_0__.Y)(logicalText["text-align"]),function logicalTextAlignCSS(value){return"text-align: ".concat(logicalText["text-align"][value],";")})},"./node_modules/@elastic/eui/es/global_styling/variables/animations.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{VT:()=>euiCanAnimate});var euiCanAnimate="@media screen and (prefers-reduced-motion: no-preference)"},"./src/components/widgets/MetadataWidget/TabWidget/HierarchyWidget/HierarchyWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{HierarchyWidget1:()=>HierarchyWidget1,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _HierarchyWidget__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/HierarchyWidget/HierarchyWidget.tsx"),_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/model/ModelTypeCheck.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"HierarchyWidget",component:_HierarchyWidget__WEBPACK_IMPORTED_MODULE_1__.q,parameters:{layout:"centered",docs:{description:{component:"The HierarchyWidget is a component designed to visualize and interact with hierarchical data structures of ontology hierarchies, specifically tailored for the OLS4 API to retrieve and display hierarchical relationships between terms within a given ontology."}}},argTypes:{api:{control:{type:"radio"},options:["https://www.ebi.ac.uk/ols4/api/","https://semanticlookup.zbmed.de/ols/api/","https://semanticlookup.zbmed.de/api/","https://ols4.qa.km.k8s.zbmed.de/ols4/api/"]},ontologyId:{description:"Ontology ID from where the term hierarchy should be taken."},iri:{description:"Iri of the term you want to fetch the term hierarchy for."},entityType:{table:{type:{summary:`${_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_2__.Op.join(" | ")}`}},control:{type:"radio"},options:["property","individual","class","not specified"]}},args:{}},Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_HierarchyWidget__WEBPACK_IMPORTED_MODULE_1__.q,{...args});Template.displayName="Template";const HierarchyWidget1=Template.bind({});HierarchyWidget1.args={iri:"http://www.ebi.ac.uk/efo/EFO_0000400",api:"https://ols4.qa.km.k8s.zbmed.de/ols4/api/",ontologyId:"efo",entityType:"class"},HierarchyWidget1.parameters={...HierarchyWidget1.parameters,docs:{...HierarchyWidget1.parameters?.docs,source:{originalSource:"(args: HierarchyWidgetProps) => <HierarchyWidget {...args} />",...HierarchyWidget1.parameters?.docs?.source}}};const __namedExportsOrder=["HierarchyWidget1"]},"./src/app/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function asArray(obj){return Array.isArray(obj)?obj:obj?[obj]:[]}__webpack_require__.d(__webpack_exports__,{DU:()=>randomString,DW:()=>pluralizeType,FQ:()=>getFrontEndApi,LB:()=>getUseLegacy,Mv:()=>deCamelCase,Q:()=>getTermInOntologySuffix,ZH:()=>capitalize,_j:()=>asArray,fd:()=>isHexColor,nY:()=>isRgbColor,ng:()=>getEntityTypeName,s0:()=>deUnderscore,zv:()=>isEuiLinkColor});const DEFAULT_USE_LEGACY=!0;function getUseLegacy(useLegacy){return void 0!==useLegacy?useLegacy:DEFAULT_USE_LEGACY}function getEntityTypeName(type){return"term"===type?"class":type}function capitalize(str){return str.charAt(0).toUpperCase()+str.slice(1)}function deCamelCase(str){return capitalize(str).split(/(?=[A-Z][a-z])/).join(" ")}function deUnderscore(str){return capitalize(str).replace("_"," ")}function getFrontEndApi(api){return api.replace("/api/","").replace("/api","")}function getTermInOntologySuffix(ontologyId,termIri,entityTypeArray){return"/ontologies/"+ontologyId+"/"+pluralizeType(entityTypeArray)+"?iri="+termIri}function pluralizeType(typeArray){for(const type of typeArray)switch(type){case"class":case"term":return"classes";case"property":return"properties";case"individual":return"individuals"}}function randomString(){return(Math.random()*Math.pow(2,54)).toString(36)}function isHexColor(str){return/^#[0-9A-F]{6}$/i.test(str)}function isRgbColor(str){return/^(rgb|hsl)(a?)[(]\s*([\d.]+\s*%?)\s*,\s*([\d.]+\s*%?)\s*,\s*([\d.]+\s*%?)\s*(?:,\s*([\d.]+)\s*)?[)]$/i.test(str)}function isEuiLinkColor(str){return["primary","subdued","success","accent","danger","warning","text","ghost"].includes(str)}},"./src/model/ModelTypeCheck.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{D4:()=>isClass,Op:()=>entityTypeNames,Ps:()=>isOntologyTypeName,Qg:()=>isEntity,UP:()=>ontologyTypeNames,Z6:()=>thingTypeNames,iV:()=>isIndividual,io:()=>isOntology,p2:()=>isEntityTypeName,sF:()=>isThingTypeName,uM:()=>isProperty});const classTypeNames=["class","term"],propertyTypeNames=["property"],individualTypeNames=["individual"],ontologyTypeNames=["ontology"],entityTypeNames=[...classTypeNames,...individualTypeNames,...propertyTypeNames],thingTypeNames=[...entityTypeNames,...ontologyTypeNames];function isOntologyTypeName(type){return ontologyTypeNames.includes(type)}function isEntityTypeName(type){return entityTypeNames.includes(type)}function isThingTypeName(type){return thingTypeNames.includes(type)}function isClass(thing){return function isClassTypeName(type){return classTypeNames.includes(type)}(thing.getType())}function isProperty(thing){return function isPropertyTypeName(type){return propertyTypeNames.includes(type)}(thing.getType())}function isIndividual(thing){return function isIndividualTypeName(type){return individualTypeNames.includes(type)}(thing.getType())}function isEntity(thing){return isEntityTypeName(thing.getType())}function isOntology(thing){return isOntologyTypeName(thing.getType())}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes="",i=0;i<arguments.length;i++){var arg=arguments[i];arg&&(classes=appendClass(classes,parseValue(arg)))}return classes}function parseValue(arg){if("string"==typeof arg||"number"==typeof arg)return arg;if("object"!=typeof arg)return"";if(Array.isArray(arg))return classNames.apply(null,arg);if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]"))return arg.toString();var classes="";for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&(classes=appendClass(classes,key));return classes}function appendClass(value,newClass){return newClass?value?value+" "+newClass:value+newClass:value}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()}}]);