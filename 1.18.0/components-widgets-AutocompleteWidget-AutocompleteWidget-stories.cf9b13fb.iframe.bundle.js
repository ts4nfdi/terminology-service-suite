"use strict";(self.webpackChunk_nfdi4health_semlookp_widgets=self.webpackChunk_nfdi4health_semlookp_widgets||[]).push([[83011],{"./node_modules/@elastic/eui/es/components/popover/popover_panel/_popover_panel.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{g:()=>EuiPopoverPanel});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),hooks=__webpack_require__("./node_modules/@elastic/eui/es/services/theme/hooks.js"),panel=__webpack_require__("./node_modules/@elastic/eui/es/components/panel/panel.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),shadow=__webpack_require__("./node_modules/@elastic/eui/es/themes/amsterdam/global_styling/mixins/shadow.js"),logicals=__webpack_require__("./node_modules/@elastic/eui/es/global_styling/functions/logicals.js"),animations=__webpack_require__("./node_modules/@elastic/eui/es/global_styling/variables/animations.js"),_excluded=["children","className","isOpen","isAttached","position"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var EuiPopoverPanelContext=(0,react.createContext)({paddingSize:"l"}),EuiPopoverPanel=function EuiPopoverPanel(_ref){var children=_ref.children,className=_ref.className,isOpen=_ref.isOpen,isAttached=_ref.isAttached,position=_ref.position,rest=_objectWithoutProperties(_ref,_excluded),panelContext=(0,react.useContext)(EuiPopoverPanelContext);rest.paddingSize&&(panelContext.paddingSize=rest.paddingSize);var euiThemeContext=(0,hooks.r)(),classes=classnames_default()("euiPopover__panel",className),styles=function euiPopoverPanelStyles(euiThemeContext){var euiTheme=euiThemeContext.euiTheme;return{euiPopover__panel:(0,emotion_react_browser_esm.iv)("position:absolute;",(0,logicals.Uw)("min-width","".concat(7*euiTheme.base,"px")),";",(0,logicals.Uw)("max-width","calc(100vw - ".concat(euiTheme.size.xl,")")),";backface-visibility:hidden;pointer-events:none;opacity:0;transform:translateY(0) translateX(0) translateZ(0);",(0,shadow.jK)(euiThemeContext,{property:"filter"})," &:focus{outline-offset:0;};label:euiPopover__panel;"),isOpen:(0,emotion_react_browser_esm.iv)("opacity:1;pointer-events:auto;",animations.k0,"{transition:opacity ",euiTheme.animation.bounce," ",euiTheme.animation.slow,",transform ",euiTheme.animation.bounce," calc(",euiTheme.animation.slow," + 100ms);};label:isOpen;"),top:(0,emotion_react_browser_esm.iv)("transform:translateY(",euiTheme.size.s,") translateZ(0);;label:top;"),bottom:(0,emotion_react_browser_esm.iv)("transform:translateY(-",euiTheme.size.s,") translateZ(0);;label:bottom;"),left:(0,emotion_react_browser_esm.iv)("transform:translateX(",euiTheme.size.s,") translateZ(0);;label:left;"),right:(0,emotion_react_browser_esm.iv)("transform:translateX(-",euiTheme.size.s,") translateZ(0);;label:right;"),attached:{isOpen:(0,emotion_react_browser_esm.iv)("filter:none;",animations.k0,"{transition:opacity ",euiTheme.animation.bounce," ",euiTheme.animation.slow,";};label:isOpen;"),top:(0,emotion_react_browser_esm.iv)((0,shadow.XB)(euiThemeContext),";;label:top;"),bottom:(0,emotion_react_browser_esm.iv)((0,shadow.Ww)(euiThemeContext,"m"),";;label:bottom;"),left:(0,emotion_react_browser_esm.iv)(";label:left;"),right:(0,emotion_react_browser_esm.iv)(";label:right;")}}}(euiThemeContext),panelCSS=[styles.euiPopover__panel,isOpen&&styles.isOpen,isOpen&&position&&styles[position]];return isAttached&&(panelCSS=[].concat(_toConsumableArray(panelCSS),[isOpen&&styles.attached.isOpen,position&&styles.attached[position]])),(0,emotion_react_browser_esm.tZ)(EuiPopoverPanelContext.Provider,{value:panelContext},(0,emotion_react_browser_esm.tZ)(panel.xe,_extends({className:classes,css:panelCSS,"data-popover-panel":!0,"data-popover-open":isOpen||void 0},rest),children))};EuiPopoverPanel.propTypes={element:prop_types_default().oneOf(["div"]),hasShadow:prop_types_default().bool,hasBorder:prop_types_default().bool,paddingSize:prop_types_default().any,borderRadius:prop_types_default().any,grow:prop_types_default().bool,panelRef:prop_types_default().any,color:prop_types_default().any,className:prop_types_default().string,"aria-label":prop_types_default().string,"data-test-subj":prop_types_default().string,isOpen:prop_types_default().bool,isAttached:prop_types_default().bool,position:prop_types_default().oneOfType([prop_types_default().any.isRequired,prop_types_default().oneOf([null])])}},"./node_modules/@elastic/eui/es/services/keys.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ft:()=>ARROW_RIGHT,HF:()=>CTRL,JU:()=>SHIFT,K5:()=>ENTER,L_:()=>SPACE,MW:()=>META,Mf:()=>TAB,NF:()=>ARROW_UP,ZH:()=>BACKSPACE,hY:()=>ESCAPE,pe:()=>ARROW_LEFT,qN:()=>ARROW_DOWN,zL:()=>ALT});var keys,ENTER="Enter",SPACE=" ",ESCAPE="Escape",TAB="Tab",BACKSPACE="Backspace",ALT="Alt",SHIFT="Shift",CTRL="Control",META="Meta",ARROW_DOWN="ArrowDown",ARROW_UP="ArrowUp",ARROW_LEFT="ArrowLeft",ARROW_RIGHT="ArrowRight";!function(keys){keys.ENTER="Enter",keys.SPACE=" ",keys.ESCAPE="Escape",keys.TAB="Tab",keys.BACKSPACE="Backspace",keys.F2="F2",keys.ALT="Alt",keys.SHIFT="Shift",keys.CTRL="Control",keys.META="Meta",keys.ARROW_DOWN="ArrowDown",keys.ARROW_UP="ArrowUp",keys.ARROW_LEFT="ArrowLeft",keys.ARROW_RIGHT="ArrowRight",keys.PAGE_UP="PageUp",keys.PAGE_DOWN="PageDown",keys.END="End",keys.HOME="Home"}(keys||(keys={}))},"./src/components/widgets/AutocompleteWidget/AutocompleteWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,allowAddingCustomTerms:()=>allowAddingCustomTerms,default:()=>__WEBPACK_DEFAULT_EXPORT__,displaySelectedEntityWithLongForm:()=>displaySelectedEntityWithLongForm,withCustomValue:()=>withCustomValue,withDefaults:()=>withDefaults,withDescriptionAndShortForm:()=>withDescriptionAndShortForm,withGermanInput:()=>withGermanInput,withInvalidValue:()=>withInvalidValue,withValue:()=>withValue});__webpack_require__("./node_modules/react/index.js");var _AutocompleteWidget__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/widgets/AutocompleteWidget/AutocompleteWidget.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Autocomplete Widget",component:_AutocompleteWidget__WEBPACK_IMPORTED_MODULE_1__.V,argTypes:{api:{description:"The API instance for the API call.\n- **Official OLS4 API of EMBL-EBI**: [https://www.ebi.ac.uk/ols4/api/](https://www.ebi.ac.uk/ols4/api/)\n- **Official SemLookP API (based on OLS3)**: [https://semanticlookup.zbmed.de/ols/api/](https://semanticlookup.zbmed.de/ols/api/)\n- **Improved SemLookP API (beta version)**: [https://semanticlookup.zbmed.de/api/](https://semanticlookup.zbmed.de/api/)",control:{type:"radio"},options:["https://www.ebi.ac.uk/ols4/api/","https://semanticlookup.zbmed.de/ols/api/","https://semanticlookup.zbmed.de/api/"]},selectionChangedEvent:{action:"selectionChangedEvent"},placeholder:{defaultValue:"Search for Term"},selectOption:{},parameter:{},hasShortSelectedLabel:{description:"If true, only the selected label of the entity is displayed. If false, the ontology and the entity short form is displayed behind the label. Default is true.",type:{required:!1}},allowCustomTerms:{description:"If true, custom terms that are not found in any ontology can be added.",type:{required:!1}},singleSelection:{description:"If true, only one concept can be selected at once.",type:{required:!1}}},args:{api:"https://semanticlookup.zbmed.de/ols/api/",parameter:"ontology=mesh,efo&type=class&collection=nfdi4health",hasShortSelectedLabel:!0,allowCustomTerms:!1,singleSelection:!0}},Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_AutocompleteWidget__WEBPACK_IMPORTED_MODULE_1__.V,{...args});Template.displayName="Template";const withDefaults=Template.bind({}),withValue=Template.bind({});withValue.args={selectOption:{iri:"http://purl.bioontology.org/ontology/MESH/D000086382"}};const withCustomValue=Template.bind({});withCustomValue.args={allowCustomTerms:!0,selectOption:{label:"freetext"}};const withInvalidValue=Template.bind({});withInvalidValue.args={selectOption:{iri:"ht3stp://purl.bioontology.org/ontology/MESH/D000086382"}};const withGermanInput=Template.bind({});withGermanInput.args={api:"https://semanticlookup.zbmed.de/api/",parameter:"collection=nfdi4health&lang=de&type=class"};const withDescriptionAndShortForm=Template.bind({});withDescriptionAndShortForm.args={api:"https://semanticlookup.zbmed.de/api/",parameter:"fieldList=description,label,iri,ontology_name,type,short_form"};const displaySelectedEntityWithLongForm=Template.bind({});displaySelectedEntityWithLongForm.args={hasShortSelectedLabel:!1};const allowAddingCustomTerms=Template.bind({});allowAddingCustomTerms.args={allowCustomTerms:!0},withDefaults.parameters={...withDefaults.parameters,docs:{...withDefaults.parameters?.docs,source:{originalSource:"args => <AutocompleteWidget {...args} />",...withDefaults.parameters?.docs?.source}}},withValue.parameters={...withValue.parameters,docs:{...withValue.parameters?.docs,source:{originalSource:"args => <AutocompleteWidget {...args} />",...withValue.parameters?.docs?.source}}},withCustomValue.parameters={...withCustomValue.parameters,docs:{...withCustomValue.parameters?.docs,source:{originalSource:"args => <AutocompleteWidget {...args} />",...withCustomValue.parameters?.docs?.source}}},withInvalidValue.parameters={...withInvalidValue.parameters,docs:{...withInvalidValue.parameters?.docs,source:{originalSource:"args => <AutocompleteWidget {...args} />",...withInvalidValue.parameters?.docs?.source}}},withGermanInput.parameters={...withGermanInput.parameters,docs:{...withGermanInput.parameters?.docs,source:{originalSource:"args => <AutocompleteWidget {...args} />",...withGermanInput.parameters?.docs?.source}}},withDescriptionAndShortForm.parameters={...withDescriptionAndShortForm.parameters,docs:{...withDescriptionAndShortForm.parameters?.docs,source:{originalSource:"args => <AutocompleteWidget {...args} />",...withDescriptionAndShortForm.parameters?.docs?.source}}},displaySelectedEntityWithLongForm.parameters={...displaySelectedEntityWithLongForm.parameters,docs:{...displaySelectedEntityWithLongForm.parameters?.docs,source:{originalSource:"args => <AutocompleteWidget {...args} />",...displaySelectedEntityWithLongForm.parameters?.docs?.source}}},allowAddingCustomTerms.parameters={...allowAddingCustomTerms.parameters,docs:{...allowAddingCustomTerms.parameters?.docs,source:{originalSource:"args => <AutocompleteWidget {...args} />",...allowAddingCustomTerms.parameters?.docs?.source}}};const __namedExportsOrder=["withDefaults","withValue","withCustomValue","withInvalidValue","withGermanInput","withDescriptionAndShortForm","displaySelectedEntityWithLongForm","allowAddingCustomTerms"]},"./src/components/widgets/AutocompleteWidget/AutocompleteWidget.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{V:()=>AutocompleteWidget});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_api_OlsApi__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/api/OlsApi.ts"),_elastic_eui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@elastic/eui/es/services/color/eui_palettes.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@elastic/eui/es/components/health/health.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@elastic/eui/es/components/highlight/highlight.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@elastic/eui/es/components/combo_box/combo_box.js"),react_query__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-query/es/index.js"),_MetadataWidget__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/widgets/MetadataWidget/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");function AutocompleteWidget(props){const{api,parameter,hasShortSelectedLabel,...rest}=props,olsApi=new _api_OlsApi__WEBPACK_IMPORTED_MODULE_4__.m(api),visColors=(0,_elastic_eui__WEBPACK_IMPORTED_MODULE_5__.EI)(),visColorsBehindText=(0,_elastic_eui__WEBPACK_IMPORTED_MODULE_5__.VP)(),[searchValue,setSearchValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[options,setOptions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),[selectedOptions,setSelectedOptions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),renderOption=(option,searchValue)=>{const{label,value}=option;if(props.allowCustomTerms&&""==value.iri)return label;{let color="";"class"===value.type?color=visColorsBehindText[5]:"individual"===value.type?color=visColorsBehindText[3]:"property"===value.type&&(color=visColorsBehindText[1]);const dotColor=visColors[visColorsBehindText.indexOf(color)];return"ontology"===value.type?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_6__.Q,{title:value.type,color:dotColor,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_7__.o,{search:searchValue,children:value.label})})}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_6__.Q,{title:value.type,color:dotColor,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("span",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_7__.o,{search:searchValue,children:value.label}),"     ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_MetadataWidget__WEBPACK_IMPORTED_MODULE_2__.bM,{api,entityType:value.type,ontologyId:value.ontology_name,iri:value.iri,colorFirst:"primary",colorSecond:"success",parameter:value.parameter})]})})}},{isLoading:isLoadingOnMount}=(0,react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)(["onMount",props.selectOption],(async()=>{props.selectOption?.iri&&props.selectOption?.iri.startsWith("http")?olsApi.select({query:props.selectOption?.iri},void 0,void 0,parameter).then((response=>{response.response&&response.response.docs&&response.response.docs.map((selection=>{props.selectOption?.iri===selection.iri&&(setOptions([{label:hasShortSelectedLabel?selection.label:generateDisplayLabel(selection),key:selection.iri,value:{iri:selection.iri,label:selection.label,ontology_name:selection.ontology_name,type:selection.type,short_form:selection.short_form,description:selection.description?.join()}}]),setSelectedOptions([{label:hasShortSelectedLabel?selection.label:generateDisplayLabel(selection),key:selection.iri,value:{iri:selection.iri,label:selection.label,ontology_name:selection.ontology_name,type:selection.type,short_form:selection.short_form,description:selection.description?.join()}}]))}))})):props.selectOption?.label&&props.allowCustomTerms&&(setOptions([{label:props.selectOption?.label,value:{iri:"",label:"",ontology_name:"",type:"",short_form:"",description:""}}]),setSelectedOptions([{label:props.selectOption?.label,value:{iri:"",label:"",ontology_name:"",type:"",short_form:"",description:""}}]))})),{isLoading:isLoadingTerms}=(0,react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)(["onSearchChange",searchValue],(async()=>{if(searchValue.length>0)return olsApi.select({query:searchValue},void 0,void 0,parameter).then((response=>{response.response&&response.response.docs&&setOptions(response.response.docs.map((selection=>({label:hasShortSelectedLabel?selection.label:generateDisplayLabel(selection),key:selection.iri,value:{iri:selection.iri,label:selection.label,ontology_name:selection.ontology_name,type:selection.type,short_form:selection.short_form,description:selection.description?.join()}}))))}))}));function generateDisplayLabel(item){return item.label+" ("+item.ontology_name.toUpperCase()+" "+item.short_form+")"}function onChangeHandler(options){setSelectedOptions(options)}function onCreateOptionHandler(searchValue){const newOption={label:searchValue,value:{iri:"",label:"",ontology_name:"",type:"",short_form:"",description:""}};setOptions([...options,newOption]),setSelectedOptions([...selectedOptions,newOption])}return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{props.selectionChangedEvent(selectedOptions.map((x=>props.allowCustomTerms&&""==x.value.iri?{iri:"",label:x.label,ontology_name:"",type:"",short_form:x.value.short_form,description:x.value.description}:{iri:x.value.iri,label:x.value.label,ontology_name:x.value.ontology_name,type:x.value.type,short_form:x.value.short_form,description:x.value.description})))}),[selectedOptions]),props.singleSelection?props.allowCustomTerms?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_8__.G,{isClearable:!0,"aria-label":"searchBar",fullWidth:!0,...rest,async:!0,isLoading:isLoadingTerms||isLoadingOnMount,singleSelection:{asPlainText:!0},placeholder:props.placeholder?props.placeholder:"Search for a Concept",options,selectedOptions,onSearchChange:setSearchValue,onChange:onChangeHandler,renderOption,onCreateOption:onCreateOptionHandler}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_8__.G,{isClearable:!0,"aria-label":"searchBar",fullWidth:!0,...rest,async:!0,isLoading:isLoadingTerms||isLoadingOnMount,singleSelection:{asPlainText:!0},placeholder:props.placeholder?props.placeholder:"Search for a Concept",options,selectedOptions,onSearchChange:setSearchValue,onChange:onChangeHandler,renderOption}):props.allowCustomTerms?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_8__.G,{isClearable:!0,"aria-label":"searchBar",fullWidth:!0,...rest,async:!0,isLoading:isLoadingTerms||isLoadingOnMount,placeholder:props.placeholder?props.placeholder:"Search for a Concept",options,selectedOptions,onSearchChange:setSearchValue,onChange:onChangeHandler,renderOption,onCreateOption:onCreateOptionHandler}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_8__.G,{isClearable:!0,"aria-label":"searchBar",fullWidth:!0,...rest,async:!0,isLoading:isLoadingTerms||isLoadingOnMount,placeholder:props.placeholder?props.placeholder:"Search for a Concept",options,selectedOptions,onSearchChange:setSearchValue,onChange:onChangeHandler,renderOption})}AutocompleteWidget.__docgenInfo={description:"A React component to provide Autosuggestion based on SemLookP.",methods:[],displayName:"AutocompleteWidget",props:{api:{required:!0,tsType:{name:"string"},description:"Instance of the OLS API to call."},parameter:{required:!1,tsType:{name:"string"},description:"Additional parameters to pass to the API.\n\nThis parameters can be used to filter the search results. Each parameter can be combined via\nthe special character <i><b>&</b></i>. The values of a parameter key can be combined with a comma sign\n<i><b>,</b></i>. The following keys could be used:<br/> <br/>\n <table>\n <thead><tr><th>Parameter</th><th>Description</th></tr></thead>\n <tr><td>ontology</td><td>Restrict a search to a set of ontologies e.g. ontology=uberon,mesh</td></tr>\n <tr><td>type</td><td>Restrict a search to an entity type, one of {class,property,individual,ontology}</td></tr>\n <tr><td>slim</td><td>Restrict a search to a particular set of slims by name</td></tr>\n <tr><td>fieldList</td><td>Specify the fields to return. Defaults are {iri,label,short_form,obo_id,ontology_name,ontology_prefix,description,type}</td></tr>\n <tr><td>obsoletes</td><td>Set to true to include obsolete terms in the results</td></tr>\n <tr><td>local</td><td>Set to true to only return terms that are in a defining ontology, e.g. only return matches to gene ontology terms in the gene ontology, and exclude ontologies where those terms are also referenced</td></tr>\n <tr><td>childrenOf</td><td>You can restrict a search to all children of a given term. Supply a list of IRI for the terms that you want to search under (subclassOf/is-a relation only)</td></tr>\n <tr><td>allChildrenOf</td><td>You can restrict a search to all children of a given term. Supply a list of IRI for the terms that you want to search under (subclassOf/is-a plus any hierarchical/transitive properties like 'part of' or 'develops from')</td></tr>\n <tr><td>rows</td><td>Set results per page</td></tr>\n <tr><td>start</td><td>Set the results page number</td></tr>\n <tr><td>collection</td><td>Restrict a search to a terminology subset e.g. collection=nfdi4health</td></tr>\n</table>"},selectionChangedEvent:{required:!0,tsType:{name:"signature",type:"function",raw:"(selectedOptions: {\n    label: string;\n    iri?: string;\n    ontology_name?: string;\n    type?: string;\n}[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n    label: string;\n    iri?: string;\n    ontology_name?: string;\n    type?: string;\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"iri",value:{name:"string",required:!1}},{key:"ontology_name",value:{name:"string",required:!1}},{key:"type",value:{name:"string",required:!1}}]}}],raw:"{\n    label: string;\n    iri?: string;\n    ontology_name?: string;\n    type?: string;\n}[]"},name:"selectedOptions"}],return:{name:"void"}}},description:"A method that is called once the set of selection changes\n@param selectedOptions  The selected items"},selectOption:{required:!1,tsType:{name:"signature",type:"object",raw:"{ label?: string; iri?: string }",signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"iri",value:{name:"string",required:!1}}]}},description:"Pass a pre select value."},placeholder:{required:!1,tsType:{name:"string"},description:"Placeholder to show if no user input nor selection is performed."},hasShortSelectedLabel:{required:!1,tsType:{name:"boolean"},description:"If true, only the selected label of the entity is displayed. If false, the ontology and the entity short form is displayed behind the label. Default is true."},allowCustomTerms:{required:!0,tsType:{name:"boolean"},description:"If true, custom terms can be added that are not found via API."},singleSelection:{required:!0,tsType:{name:"boolean"},description:"If true, only one concept can be selected at once."}},composes:["EuiComboBoxProps"]}},"./src/components/widgets/MetadataWidget/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{bM:()=>_BreadcrumbWidget__WEBPACK_IMPORTED_MODULE_2__.b,dm:()=>_DescriptionWidget__WEBPACK_IMPORTED_MODULE_0__.d,wt:()=>_IriWidget__WEBPACK_IMPORTED_MODULE_1__.w});var _DescriptionWidget__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/widgets/MetadataWidget/DescriptionWidget/index.ts"),_IriWidget__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/widgets/MetadataWidget/IriWidget/index.ts"),_BreadcrumbWidget__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/widgets/MetadataWidget/BreadcrumbWidget/index.ts");__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/index.ts"),__webpack_require__("./src/components/widgets/MetadataWidget/TitleWidget/index.ts"),__webpack_require__("./src/components/widgets/MetadataWidget/MetadataWidget.tsx")}}]);