"use strict";(self.webpackChunk_ts4nfdi_terminology_service_suite=self.webpackChunk_ts4nfdi_terminology_service_suite||[]).push([[97200],{"./src/components/widgets/MetadataWidget/BreadcrumbWidget/BreadcrumbPresentation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{O:()=>BreadcrumbPresentation});__webpack_require__("./node_modules/react/index.js");var _elastic_eui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@elastic/eui/es/components/badge/badge.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@elastic/eui/es/components/icon/icon.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function BreadcrumbPresentation(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("span",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("button",{onClick:()=>{props.onNavigateToOntology&&props.onNavigateToOntology(props.ontologyId||"",void 0,void 0)},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_2__.b$,{className:props.ontologyId?"breadcrumb clickable-breadcrumb":"breadcrumb",color:props.colorFirst||"primary",children:props.ontologyName?props.ontologyName.toUpperCase():"No ontology name available"})})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_3__.BJ,{type:"arrowRight"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_2__.b$,{className:"breadcrumb",color:props.colorSecond||"success",children:props.shortForm?props.shortForm.toUpperCase():"No short form available"})]})})}BreadcrumbPresentation.__docgenInfo={description:"",methods:[],displayName:"BreadcrumbPresentation",props:{ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},colorFirst:{required:!1,tsType:{name:"union",raw:"EuiLinkColor | string",elements:[{name:"EuiLinkColor"},{name:"string"}]},description:"Color of the first badge, can be primary, accent, success, warning, danger, ghost, text, subdued or a hex / rgb value"},colorSecond:{required:!1,tsType:{name:"union",raw:"EuiLinkColor | string",elements:[{name:"EuiLinkColor"},{name:"string"}]},description:"Color of the second badge, can be primary, accent, success, warning, danger, ghost, text, subdued or a hex / rgb value"},ontologyName:{required:!0,tsType:{name:"string"},description:""},shortForm:{required:!0,tsType:{name:"string"},description:""},onNavigateToOntology:{required:!1,tsType:{name:"signature",type:"function",raw:"(ontologyId: string, entityType?: string, entity?: EntityData) => void",signature:{arguments:[{type:{name:"string"},name:"ontologyId"},{type:{name:"string"},name:"entityType"},{type:{name:"signature",type:"object",raw:"{\n  iri: string;\n  label?: string;\n  definedBy?: string[];\n  /**\n   * should be present for use with hierarchy\n   */\n  hasChildren?: boolean;\n  numDescendants?: number;\n  /**\n   * should be present for use with hierarchy\n   */\n  parents?: Reified<string>[];\n}",signature:{properties:[{key:"iri",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"definedBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"hasChildren",value:{name:"boolean",required:!1},description:"should be present for use with hierarchy"},{key:"numDescendants",value:{name:"number",required:!1}},{key:"parents",value:{name:"Array",elements:[{name:"Reified",elements:[{name:"string"}],raw:"Reified<string>"}],raw:"Reified<string>[]",required:!1},description:"should be present for use with hierarchy"}]}},name:"entity"}],return:{name:"void"}}},description:"This function is called every time an entity link is clicked\n@param ontologyId obtains the ontologyId of the clicked badge\n@param entityType obtains the entityType of the clicked badge\n@param entity.iri obtains the iri of the clicked badge (can be empty)\n@param entity.label obtains the label of the clicked badge\n@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)\n@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities\n@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)\n@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)"}}}},"./src/components/widgets/MetadataWidget/DescriptionWidget/DescriptionPresentation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>DescriptionPresentation});__webpack_require__("./node_modules/react/index.js");var _elastic_eui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function DescriptionPresentation(props){const{descText,description,...rest}=props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_2__.b,{...rest,children:descText||description})})}DescriptionPresentation.__docgenInfo={description:"",methods:[],displayName:"DescriptionPresentation",props:{descText:{required:!1,tsType:{name:"string"},description:"Set your own text manually that overwrites the text fetched from the API"},description:{required:!0,tsType:{name:"string"},description:""}}}},"./src/components/widgets/MetadataWidget/EntityDefinedByWidget/EntityDefinedByPresentation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{i:()=>EntityDefinedByPresentation});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),_app_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/app/util.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const MAX_ONTOLOGIES_ON_DISPLAY=5;function EntityDefinedByPresentation(props){const[appearsInExpanded,setAppearsInExpanded]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);function renderOntoBadge(ontology){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{onClick:()=>{props.onNavigateToOntology&&props.onNavigateToOntology(ontology,props.entityType||"",{iri:props.iri,label:props.label})},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{className:"ontology-badge",children:ontology.toUpperCase()})},(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.DU)())}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:props.ontolist&&props.ontolist.length>0&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_elastic_eui__WEBPACK_IMPORTED_MODULE_3__.b,{style:{fontWeight:"normal"},children:["Defined by ",function renderOntoBadges(){return props.ontolist.length>MAX_ONTOLOGIES_ON_DISPLAY&&!appearsInExpanded?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[props.ontolist.slice(0,MAX_ONTOLOGIES_ON_DISPLAY).map((ontology=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{children:[renderOntoBadge(ontology)," "]},(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.DU)()))),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("button",{className:"expand-onto-list",onClick:()=>setAppearsInExpanded(!0),children:["+ ",props.ontolist.length-MAX_ONTOLOGIES_ON_DISPLAY]})]}):props.ontolist.map((ontology=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{children:[renderOntoBadge(ontology)," "]},(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.DU)())))}()]})})}EntityDefinedByPresentation.__docgenInfo={description:"",methods:[],displayName:"EntityDefinedByPresentation",props:{entityType:{required:!1,tsType:{name:"entityTypeNames[number]",raw:"typeof entityTypeNames[number]"},description:"Sets the type of the entity whose information you want to fetch."},iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},onNavigateToOntology:{required:!1,tsType:{name:"signature",type:"function",raw:"(ontologyId: string, entityType?: string, entity?: EntityData) => void",signature:{arguments:[{type:{name:"string"},name:"ontologyId"},{type:{name:"string"},name:"entityType"},{type:{name:"signature",type:"object",raw:"{\n  iri: string;\n  label?: string;\n  definedBy?: string[];\n  /**\n   * should be present for use with hierarchy\n   */\n  hasChildren?: boolean;\n  numDescendants?: number;\n  /**\n   * should be present for use with hierarchy\n   */\n  parents?: Reified<string>[];\n}",signature:{properties:[{key:"iri",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"definedBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"hasChildren",value:{name:"boolean",required:!1},description:"should be present for use with hierarchy"},{key:"numDescendants",value:{name:"number",required:!1}},{key:"parents",value:{name:"Array",elements:[{name:"Reified",elements:[{name:"string"}],raw:"Reified<string>"}],raw:"Reified<string>[]",required:!1},description:"should be present for use with hierarchy"}]}},name:"entity"}],return:{name:"void"}}},description:"This function is called every time an entity link is clicked\n@param ontologyId obtains the ontologyId of the clicked badge\n@param entityType obtains the entityType of the clicked badge\n@param entity.iri obtains the iri of the clicked badge (can be empty)\n@param entity.label obtains the label of the clicked badge\n@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)\n@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities\n@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)\n@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)"},ontolist:{required:!0,tsType:{name:"Array",elements:[{name:"any"}],raw:"any[]"},description:""},label:{required:!0,tsType:{name:"string"},description:""}}}},"./src/components/widgets/MetadataWidget/EntityOntoListWidget/EntityOntoListPresentation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>EntityOntoListPresentation});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),_app_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/app/util.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const MAX_ONTOLOGIES_ON_DISPLAY=5;function EntityOntoListPresentation(props){const[appearsInExpanded,setAppearsInExpanded]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);function renderOntoBadge(ontology){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{onClick:()=>{props.onNavigateToOntology&&props.onNavigateToOntology(ontology,props.entityType||"",{iri:props.iri,label:props.label})},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{className:"ontology-badge",children:ontology.toUpperCase()})},(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.DU)())}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:props.ontolist&&props.ontolist.length>0&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_elastic_eui__WEBPACK_IMPORTED_MODULE_3__.b,{style:{fontWeight:"normal"},children:["Also appears in ",function renderOntoBadges(){return props.ontolist.length>MAX_ONTOLOGIES_ON_DISPLAY&&!appearsInExpanded?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[props.ontolist.slice(0,MAX_ONTOLOGIES_ON_DISPLAY).map((ontology=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{children:[renderOntoBadge(ontology)," "]},(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.DU)()))),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("button",{className:"expand-onto-list",onClick:()=>setAppearsInExpanded(!0),children:["+ ",props.ontolist.length-MAX_ONTOLOGIES_ON_DISPLAY]})]}):props.ontolist.map((ontology=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{children:[renderOntoBadge(ontology)," "]},(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.DU)())))}()]})})}EntityOntoListPresentation.__docgenInfo={description:"",methods:[],displayName:"EntityOntoListPresentation",props:{entityType:{required:!1,tsType:{name:"entityTypeNames[number]",raw:"typeof entityTypeNames[number]"},description:"Sets the type of the entity whose information you want to fetch."},iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},onNavigateToOntology:{required:!1,tsType:{name:"signature",type:"function",raw:"(ontologyId: string, entityType?: string, entity?: EntityData) => void",signature:{arguments:[{type:{name:"string"},name:"ontologyId"},{type:{name:"string"},name:"entityType"},{type:{name:"signature",type:"object",raw:"{\n  iri: string;\n  label?: string;\n  definedBy?: string[];\n  /**\n   * should be present for use with hierarchy\n   */\n  hasChildren?: boolean;\n  numDescendants?: number;\n  /**\n   * should be present for use with hierarchy\n   */\n  parents?: Reified<string>[];\n}",signature:{properties:[{key:"iri",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"definedBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"hasChildren",value:{name:"boolean",required:!1},description:"should be present for use with hierarchy"},{key:"numDescendants",value:{name:"number",required:!1}},{key:"parents",value:{name:"Array",elements:[{name:"Reified",elements:[{name:"string"}],raw:"Reified<string>"}],raw:"Reified<string>[]",required:!1},description:"should be present for use with hierarchy"}]}},name:"entity"}],return:{name:"void"}}},description:"This function is called every time an entity link is clicked\n@param ontologyId obtains the ontologyId of the clicked badge\n@param entityType obtains the entityType of the clicked badge\n@param entity.iri obtains the iri of the clicked badge (can be empty)\n@param entity.label obtains the label of the clicked badge\n@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)\n@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities\n@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)\n@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)"},ontolist:{required:!0,tsType:{name:"Array",elements:[{name:"any"}],raw:"any[]"},description:""},label:{required:!0,tsType:{name:"string"},description:""}}}},"./src/components/widgets/MetadataWidget/IriWidget/IriWidget.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>IriWidget});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@elastic/eui/es/components/button/button_icon/button_icon.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@elastic/eui/es/components/flex/flex_item.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@elastic/eui/es/components/link/link.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),_app_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/app/util.ts"),react_query__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./node_modules/react-query/es/index.js")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");function IriWidget(props){const{iri,iriText,color,externalIcon,urlPrefix,copyButton}=props,[copied,setCopied]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),iriUrl=void 0!==urlPrefix&&""!==urlPrefix?urlPrefix+encodeURIComponent(iri):iri,CopyLinkButton=()=>copied?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_5__.Jd,{style:{marginLeft:"5px",color:color&&((0,_app_util__WEBPACK_IMPORTED_MODULE_1__.fd)(color)||(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.nY)(color))?color:""},display:"base",iconType:"check",color:color&&(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.zv)(color)?color:void 0},"copy-btn"):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_5__.Jd,{display:"base",iconType:"copy",style:{marginLeft:"5px",color:color&&((0,_app_util__WEBPACK_IMPORTED_MODULE_1__.fd)(color)||(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.nY)(color))?color:""},color:color&&(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.zv)(color)?color:void 0,onClick:()=>{navigator.clipboard.writeText(iriUrl),setCopied(!0),setTimeout((()=>{setCopied(!1)}),2e3)}},"copy-btn");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_6__.a,{grow:!1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_7__.q,{href:iriUrl,target:"_blank",style:{color:color&&((0,_app_util__WEBPACK_IMPORTED_MODULE_1__.fd)(color)||(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.nY)(color))?color:""},color:color&&(0,_app_util__WEBPACK_IMPORTED_MODULE_1__.zv)(color)?color:void 0,external:externalIcon,children:iriText||iri}),copyButton&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(CopyLinkButton,{})]})})}function WrappedIriWidget(props){const queryClient=new react_query__WEBPACK_IMPORTED_MODULE_3__.QueryClient;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_8__.l,{colorMode:"light",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_query__WEBPACK_IMPORTED_MODULE_3__.QueryClientProvider,{client:queryClient,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(IriWidget,{iri:props.iri,iriText:props.iriText,color:props.color,externalIcon:props.externalIcon,urlPrefix:props.urlPrefix,copyButton:props.copyButton})})})}IriWidget.displayName="IriWidget",WrappedIriWidget.displayName="WrappedIriWidget",IriWidget.__docgenInfo={description:"",methods:[],displayName:"IriWidget",props:{iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},iriText:{required:!1,tsType:{name:"string"},description:"Set your own text manually, which will show as a clickable link instead of the IRI."},color:{required:!1,tsType:{name:"union",raw:"EuiLinkColor | string",elements:[{name:"EuiLinkColor"},{name:"string"}]},description:"Color of the text, names, hex or rgb"},externalIcon:{required:!1,tsType:{name:"boolean"},description:"Indicates that the target is external and needs an icon."},urlPrefix:{required:!1,tsType:{name:"string"},description:"The iri should get appended to the urlPrefix or not. When provided, the iri gets encoded and appended to the urlPrefix."},copyButton:{required:!1,tsType:{name:"boolean"},description:"If true, a copy button is shown next to the link."}}}},"./src/components/widgets/MetadataWidget/IriWidget/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>_IriWidget__WEBPACK_IMPORTED_MODULE_0__.Z});var _IriWidget__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/widgets/MetadataWidget/IriWidget/IriWidget.tsx")},"./src/components/widgets/MetadataWidget/MetadataWidget.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>MetadataWidget});__webpack_require__("./node_modules/react/index.js");var _elastic_eui__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@elastic/eui/es/components/flex/flex_group.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/@elastic/eui/es/components/flex/flex_item.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./node_modules/@elastic/eui/es/components/link/link.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./node_modules/@elastic/eui/es/components/loading/loading_spinner.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),_IriWidget__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/widgets/MetadataWidget/IriWidget/index.ts"),react_query__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-query/es/index.js"),_api_OlsApi__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/api/OlsApi.ts"),_BreadcrumbWidget_BreadcrumbPresentation__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/widgets/MetadataWidget/BreadcrumbWidget/BreadcrumbPresentation.tsx"),_TabWidget_TabPresentation__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/TabPresentation.tsx"),_DescriptionWidget_DescriptionPresentation__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/widgets/MetadataWidget/DescriptionWidget/DescriptionPresentation.tsx"),_TitleWidget_TitlePresentation__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/widgets/MetadataWidget/TitleWidget/TitlePresentation.tsx"),_app_util__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/app/util.ts"),_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/model/ModelTypeCheck.ts"),_model_ModelObjectCreator__WEBPACK_IMPORTED_MODULE_11__=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./src/model/ModelObjectCreator.ts")),_EntityOntoListWidget_EntityOntoListPresentation__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./src/components/widgets/MetadataWidget/EntityOntoListWidget/EntityOntoListPresentation.tsx"),_EntityDefinedByWidget_EntityDefinedByPresentation__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./src/components/widgets/MetadataWidget/EntityDefinedByWidget/EntityDefinedByPresentation.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__=(__webpack_require__("./src/style/semlookp-styles.css"),__webpack_require__("./node_modules/react/jsx-runtime.js"));function MetadataWidget(props){const{iri,api,ontologyId,entityType,parameter,useLegacy,onNavigateToOntology,hierarchyTab,crossRefTab,terminologyInfoTab,altNamesTab,termLink}=props,olsApi=new _api_OlsApi__WEBPACK_IMPORTED_MODULE_3__.l(api),{data,isLoading,isSuccess,isError,error}=(0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)(["metadata",api,parameter,entityType,iri,ontologyId,useLegacy],(async()=>{let entity,ontoList,definedBy;if(useLegacy){const embedded=(await olsApi.getEntityResponse(iri,entityType,void 0,parameter,useLegacy))._embedded;entity=(0,_model_ModelObjectCreator__WEBPACK_IMPORTED_MODULE_11__.t)({_embedded:{[Object.keys(embedded)[0]]:(0,_model_ModelObjectCreator__WEBPACK_IMPORTED_MODULE_11__.$)(embedded[Object.keys(embedded)[0]],useLegacy,ontologyId)}}),ontoList=embedded[Object.keys(embedded)[0]].map((entityInOntology=>entityInOntology.ontology_name)),definedBy=embedded[Object.keys(embedded)[0]].filter((entityInOntology=>entityInOntology.is_defining_ontology)).map((entityInOntology=>entityInOntology.ontology_name))}else entity=await olsApi.getEntityObject(iri,entityType,ontologyId,parameter,useLegacy),ontoList=entity.getAppearsIn(),definedBy=entity.getDefinedBy();return definedBy=definedBy.filter((onto=>onto!=entity.getOntologyId())).sort(),ontoList=ontoList.filter((onto=>onto!=entity.getOntologyId()&&!definedBy.includes(onto))).sort(),{entity,ontoList,definedBy}}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.Fragment,{children:[isLoading&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_19__.V,{}),isError&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_20__.b,{children:(0,_app_util__WEBPACK_IMPORTED_MODULE_8__.lr)(error,"metadata")}),isSuccess&&data&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.Fragment,{children:(0,_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_9__.Qg)(data.entity)?function render(data){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)("style",{children:"\n    .boldText{\n      font-weight: bold;\n    }\n  "}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)(_elastic_eui__WEBPACK_IMPORTED_MODULE_16__.cZ,{direction:"column",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_17__.a,{grow:!1,style:{maxWidth:600},children:termLink?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_18__.q,{href:termLink,target:"_blank",external:!1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_TitleWidget_TitlePresentation__WEBPACK_IMPORTED_MODULE_7__.B,{title:data.entity.getLabel(),className:"boldText"})}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_TitleWidget_TitlePresentation__WEBPACK_IMPORTED_MODULE_7__.B,{title:data.entity.getLabel(),className:"boldText"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_17__.a,{grow:!1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)("span",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_BreadcrumbWidget_BreadcrumbPresentation__WEBPACK_IMPORTED_MODULE_4__.O,{onNavigateToOntology:props.onNavigateToOntology,ontologyId:ontologyId||data.entity.getOntologyId(),ontologyName:data.entity.getOntologyId(),shortForm:data.entity.getShortForm()})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_17__.a,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_16__.cZ,{direction:"column",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_17__.a,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_16__.cZ,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_17__.a,{grow:!1,style:{maxWidth:600},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_IriWidget__WEBPACK_IMPORTED_MODULE_1__.Z,{iri})})})})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_17__.a,{style:{maxWidth:600},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_DescriptionWidget_DescriptionPresentation__WEBPACK_IMPORTED_MODULE_6__.D,{description:data.entity.getDescription()})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div",{style:{margin:"0 12px 0",maxWidth:600},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_EntityOntoListWidget_EntityOntoListPresentation__WEBPACK_IMPORTED_MODULE_12__.a,{iri:props.iri,label:data.entity.getLabel()||"",ontolist:data.ontoList,entityType:entityType||data.entity.getType(),onNavigateToOntology}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_EntityDefinedByWidget_EntityDefinedByPresentation__WEBPACK_IMPORTED_MODULE_13__.i,{iri:props.iri,ontolist:data.definedBy,label:data.entity.getLabel()||"",entityType:entityType||data.entity.getType(),onNavigateToOntology})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_17__.a,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_TabWidget_TabPresentation__WEBPACK_IMPORTED_MODULE_5__._,{data:data.entity,iri,entityType:props.entityType,api,ontologyId:props.ontologyId?props.ontologyId:data.entity.getOntologyId(),useLegacy,hierarchyTab,crossRefTab,terminologyInfoTab,altNamesTab,hierarchyPreferredRoots:props.hierarchyPreferredRoots,hierarchyShowSiblingsOnInit:props.hierarchyShowSiblingsOnInit,hierarchyKeepExpansionStates:props.hierarchyKeepExpansionStates,onNavigateToEntity:props.onNavigateToEntity,onNavigateToOntology:props.onNavigateToOntology,onNavigateToDisambiguate:props.onNavigateToDisambiguate})})]})]})}(data):null})]})}function WrappedMetadataWidget(props){const queryClient=new react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClient;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_21__.l,{colorMode:"light",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClientProvider,{client:queryClient,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx)(MetadataWidget,{iri:props.iri,ontologyId:props.ontologyId,api:props.api,entityType:props.entityType,parameter:props.parameter,useLegacy:props.useLegacy,termLink:props.termLink,altNamesTab:props.altNamesTab,hierarchyTab:props.hierarchyTab,crossRefTab:props.crossRefTab,terminologyInfoTab:props.terminologyInfoTab,hierarchyPreferredRoots:props.hierarchyPreferredRoots,hierarchyShowSiblingsOnInit:props.hierarchyShowSiblingsOnInit,hierarchyKeepExpansionStates:props.hierarchyKeepExpansionStates,onNavigateToEntity:props.onNavigateToEntity,onNavigateToOntology:props.onNavigateToOntology,onNavigateToDisambiguate:props.onNavigateToDisambiguate})})})}WrappedMetadataWidget.displayName="WrappedMetadataWidget",MetadataWidget.__docgenInfo={description:"",methods:[],displayName:"MetadataWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call.\n- **Official OLS4 API of EMBL-EBI**: [https://www.ebi.ac.uk/ols4/api/](https://www.ebi.ac.uk/ols4/api/)\n- **Official SemLookP API (based on OLS3)**: [https://semanticlookup.zbmed.de/ols/api/](https://semanticlookup.zbmed.de/ols/api/)\n- **Improved SemLookP API (beta version)**: [https://semanticlookup.zbmed.de/api/](https://semanticlookup.zbmed.de/api/)\n- **OLS4 API NFDI4Health collection**: [https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/](https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/)\n- **TIB Terminology Service**: [https://service.tib.eu/ts4tib/api/](https://service.tib.eu/ts4tib/api/)\n- **TS4NFDI Gateway**: [https://ts4nfdi-api-gateway.prod.km.k8s.zbmed.de/api-gateway/](https://ts4nfdi-api-gateway.prod.km.k8s.zbmed.de/api-gateway/)"},entityType:{required:!1,tsType:{name:"entityTypeNames[number]",raw:"typeof entityTypeNames[number]"},description:"Sets the type of the entity whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},parameter:{required:!1,tsType:{name:"string"},description:"Additional parameters to pass to the API.\n\nEach parameter can be combined via\nthe special character <i><b>&</b></i>. The values of a parameter key can be combined with a comma sign\n<i><b>,</b></i>. The following keys could be used:<br/> <br/>\n <table>\n <thead><tr><th>Parameter</th><th>Description</th></tr></thead>\n <tr><td>lang</td><td>Set the language for the response e.g. <b><i>en</i></b>, <b><i>de</i></b>, <b><i>fr</i></b>. The default value is <b><i>en</i></b>.</td></tr>\n <tr><td>collection</td><td>Restrict a search to a terminology subset e.g. <b><i>collection=nfdi4health</i></b></td></tr>\n <tr><td>database</td><td>Restrict a search via the API Gateway to specific terminology software stacks, choose from <b><i>ols</i></b>, <b><i>ontoportal</i></b>, or <b><i>skosmos</i></b></td></tr>\n</table>"},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."},altNamesTab:{required:!1,tsType:{name:"boolean"},description:"It is possible to show and hide the Alternative Names tab. **True** shows the tab. **False** hides the tab."},hierarchyTab:{required:!1,tsType:{name:"boolean"},description:"It is possible to show and hide the Hierarchy tab. **True** shows the tab. **False** hides the tab."},crossRefTab:{required:!1,tsType:{name:"boolean"},description:"It is possible to show and hide the Cross-references tab. **True** shows the tab. **False** hides the tab."},terminologyInfoTab:{required:!1,tsType:{name:"boolean"},description:"It is possible to show and hide the About Terminology Info tab. **True** shows the tab. **False** hides the tab."},onNavigateToEntity:{required:!1,tsType:{name:"signature",type:"function",raw:"(ontologyId: string, entityType?: string, entity?: EntityData) => void",signature:{arguments:[{type:{name:"string"},name:"ontologyId"},{type:{name:"string"},name:"entityType"},{type:{name:"signature",type:"object",raw:"{\n  iri: string;\n  label?: string;\n  definedBy?: string[];\n  /**\n   * should be present for use with hierarchy\n   */\n  hasChildren?: boolean;\n  numDescendants?: number;\n  /**\n   * should be present for use with hierarchy\n   */\n  parents?: Reified<string>[];\n}",signature:{properties:[{key:"iri",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"definedBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"hasChildren",value:{name:"boolean",required:!1},description:"should be present for use with hierarchy"},{key:"numDescendants",value:{name:"number",required:!1}},{key:"parents",value:{name:"Array",elements:[{name:"Reified",elements:[{name:"string"}],raw:"Reified<string>"}],raw:"Reified<string>[]",required:!1},description:"should be present for use with hierarchy"}]}},name:"entity"}],return:{name:"void"}}},description:"This function is called every time an entity link is clicked\n@param ontologyId obtains the ontologyId of the current ontology\n@param entityType obtains the entityType of the clicked entity\n@param entity.iri obtains the iri of the clicked entity\n@param entity.label obtains the label of the clicked entity\n@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)\n@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities\n@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)\n@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)"},onNavigateToOntology:{required:!1,tsType:{name:"signature",type:"function",raw:"(ontologyId: string, entityType?: string, entity?: EntityData) => void",signature:{arguments:[{type:{name:"string"},name:"ontologyId"},{type:{name:"string"},name:"entityType"},{type:{name:"signature",type:"object",raw:"{\n  iri: string;\n  label?: string;\n  definedBy?: string[];\n  /**\n   * should be present for use with hierarchy\n   */\n  hasChildren?: boolean;\n  numDescendants?: number;\n  /**\n   * should be present for use with hierarchy\n   */\n  parents?: Reified<string>[];\n}",signature:{properties:[{key:"iri",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"definedBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"hasChildren",value:{name:"boolean",required:!1},description:"should be present for use with hierarchy"},{key:"numDescendants",value:{name:"number",required:!1}},{key:"parents",value:{name:"Array",elements:[{name:"Reified",elements:[{name:"string"}],raw:"Reified<string>"}],raw:"Reified<string>[]",required:!1},description:"should be present for use with hierarchy"}]}},name:"entity"}],return:{name:"void"}}},description:"This function is called every time an entity link is clicked\n@param ontologyId obtains the ontologyId of the clicked badge\n@param entityType obtains the entityType of the clicked badge\n@param entity.iri obtains the iri of the clicked badge (can be empty)\n@param entity.label obtains the label of the clicked badge\n@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)\n@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities\n@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)\n@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)"},onNavigateToDisambiguate:{required:!1,tsType:{name:"signature",type:"function",raw:"(entityType: string, entity?: EntityData) => void",signature:{arguments:[{type:{name:"string"},name:"entityType"},{type:{name:"signature",type:"object",raw:"{\n  iri: string;\n  label?: string;\n  definedBy?: string[];\n  /**\n   * should be present for use with hierarchy\n   */\n  hasChildren?: boolean;\n  numDescendants?: number;\n  /**\n   * should be present for use with hierarchy\n   */\n  parents?: Reified<string>[];\n}",signature:{properties:[{key:"iri",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"definedBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"hasChildren",value:{name:"boolean",required:!1},description:"should be present for use with hierarchy"},{key:"numDescendants",value:{name:"number",required:!1}},{key:"parents",value:{name:"Array",elements:[{name:"Reified",elements:[{name:"string"}],raw:"Reified<string>"}],raw:"Reified<string>[]",required:!1},description:"should be present for use with hierarchy"}]}},name:"entity"}],return:{name:"void"}}},description:"This function is called every time a disambiguation badge is clicked\n@param entityType obtains the entityType of the clicked badge\n@param entity.iri obtains the iri of the clicked badge (can be empty)\n@param entity.label obtains the label of the clicked badge\n@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)\n@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities\n@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)\n@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)"},hierarchyPreferredRoots:{required:!1,tsType:{name:"boolean"},description:""},hierarchyKeepExpansionStates:{required:!1,tsType:{name:"boolean"},description:""},hierarchyShowSiblingsOnInit:{required:!1,tsType:{name:"boolean"},description:""},termLink:{required:!1,tsType:{name:"string"},description:"The term backlink. User can use this to make the term's label a link. For example, a link to the term page on a terminology service."}}}},"./src/components/widgets/MetadataWidget/TitleWidget/TitlePresentation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>TitlePresentation});__webpack_require__("./node_modules/react/index.js");var _elastic_eui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function TitlePresentation(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_2__.b,{className:props.className,children:props.titleText||props.title})}TitlePresentation.displayName="TitlePresentation",TitlePresentation.__docgenInfo={description:"",methods:[],displayName:"TitlePresentation",props:{titleText:{required:!1,tsType:{name:"string"},description:"Set your own text manually that overwrites the text fetched from the API"},title:{required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},defaultValue:{required:!1,tsType:{name:"string"},description:"Set the default text shown if the API fails to retrieve one."}}}}}]);