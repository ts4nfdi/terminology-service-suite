"use strict";(self.webpackChunk_ts4nfdi_terminology_service_suite=self.webpackChunk_ts4nfdi_terminology_service_suite||[]).push([[77815],{"./node_modules/@elastic/eui/es/components/flex/flex_group.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cZ:()=>EuiFlexGroup});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),style_memoization=__webpack_require__("./node_modules/@elastic/eui/es/services/theme/style_memoization.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),_responsive=__webpack_require__("./node_modules/@elastic/eui/es/global_styling/mixins/_responsive.js"),logicals=__webpack_require__("./node_modules/@elastic/eui/es/global_styling/functions/logicals.js");var _ref={name:"n4hdkg-columnReverse",styles:"flex-direction:column-reverse;label:columnReverse;"},_ref2={name:"ll8kmq-column",styles:"flex-direction:column;label:column;"},_ref3={name:"1vnizo1-rowReverse",styles:"flex-direction:row-reverse;label:rowReverse;"},_ref4={name:"15mvjmo-row",styles:"flex-direction:row;label:row;"},_ref5={name:"nq5j9u-baseline",styles:"align-items:baseline;label:baseline;"},_ref6={name:"8391db-center",styles:"align-items:center;label:center;"},_ref7={name:"14j6er4-flexEnd",styles:"align-items:flex-end;label:flexEnd;"},_ref8={name:"1mmtjvb-flexStart",styles:"align-items:flex-start;label:flexStart;"},_ref9={name:"1uwc4oj-stretch",styles:"align-items:stretch;label:stretch;"},_ref10={name:"1m1byq-center",styles:"justify-content:center;label:center;"},_ref11={name:"16lku54-spaceAround",styles:"justify-content:space-around;label:spaceAround;"},_ref12={name:"1h16bgr-spaceBetween",styles:"justify-content:space-between;label:spaceBetween;"},_ref13={name:"jykwsi-spaceEvenly",styles:"justify-content:space-evenly;label:spaceEvenly;"},_ref14={name:"1nfuqww-flexEnd",styles:"justify-content:flex-end;label:flexEnd;"},_ref15={name:"e9miiv-flexStart",styles:"justify-content:flex-start;label:flexStart;"},_ref16={name:"qg5yc9-wrap",styles:"flex-wrap:wrap;label:wrap;"},_ref17={name:"4quxm4-euiFlexGroup",styles:"display:flex;align-items:stretch;flex-grow:1;label:euiFlexGroup;"},euiFlexGroupStyles=function euiFlexGroupStyles(euiThemeContext){var euiTheme=euiThemeContext.euiTheme;return{euiFlexGroup:_ref17,responsive:(0,emotion_react_browser_esm.AH)((0,_responsive.lP)(euiThemeContext,"m"),"{flex-wrap:wrap;&>.euiFlexItem{",(0,logicals.l1)("width","100%")," flex-basis:100%;}};label:responsive;"),wrap:_ref16,gutterSizes:{none:(0,emotion_react_browser_esm.AH)(";label:none;"),xs:(0,emotion_react_browser_esm.AH)("gap:",euiTheme.size.xs,";;label:xs;"),s:(0,emotion_react_browser_esm.AH)("gap:",euiTheme.size.s,";;label:s;"),m:(0,emotion_react_browser_esm.AH)("gap:",euiTheme.size.base,";;label:m;"),l:(0,emotion_react_browser_esm.AH)("gap:",euiTheme.size.l,";;label:l;"),xl:(0,emotion_react_browser_esm.AH)("gap:",euiTheme.size.xxl,";;label:xl;")},justifyContent:{flexStart:_ref15,flexEnd:_ref14,spaceEvenly:_ref13,spaceBetween:_ref12,spaceAround:_ref11,center:_ref10},alignItems:{stretch:_ref9,flexStart:_ref8,flexEnd:_ref7,center:_ref6,baseline:_ref5},direction:{row:_ref4,rowReverse:_ref3,column:_ref2,columnReverse:_ref}}},_excluded=["className","component","gutterSize","alignItems","responsive","justifyContent","direction","wrap"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var EuiFlexGroupInternal=function EuiFlexGroupInternal(_ref,ref){var className=_ref.className,_ref$component=_ref.component,component=void 0===_ref$component?"div":_ref$component,_ref$gutterSize=_ref.gutterSize,gutterSize=void 0===_ref$gutterSize?"l":_ref$gutterSize,_ref$alignItems=_ref.alignItems,alignItems=void 0===_ref$alignItems?"stretch":_ref$alignItems,_ref$responsive=_ref.responsive,responsive=void 0===_ref$responsive||_ref$responsive,_ref$justifyContent=_ref.justifyContent,justifyContent=void 0===_ref$justifyContent?"flexStart":_ref$justifyContent,_ref$direction=_ref.direction,direction=void 0===_ref$direction?"row":_ref$direction,_ref$wrap=_ref.wrap,wrap=void 0!==_ref$wrap&&_ref$wrap,rest=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded),styles=(0,style_memoization.Nh)(euiFlexGroupStyles),cssStyles=[styles.euiFlexGroup,responsive&&!direction.includes("column")&&styles.responsive,wrap&&styles.wrap,styles.gutterSizes[gutterSize],styles.justifyContent[justifyContent],styles.alignItems[alignItems],styles.direction[direction]],classes=classnames_default()("euiFlexGroup",className),Component=component;return(0,emotion_react_browser_esm.Y)(Component,_extends({},rest,{ref,className:classes,css:cssStyles}))},EuiFlexGroup=(0,react.forwardRef)(EuiFlexGroupInternal);EuiFlexGroup.displayName="EuiFlexGroup"},"./src/components/widgets/MetadataWidget/TabWidget/TabWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DefiningOntologyUnavailable:()=>DefiningOntologyUnavailable,HiddenTabs:()=>HiddenTabs,SelectingDefiningOntology:()=>SelectingDefiningOntology,TabWidgetLarge:()=>TabWidgetLarge,TabWidgetOLS3:()=>TabWidgetOLS3,TabWidgetOLS4V1:()=>TabWidgetOLS4V1,TabWidgetOLS4V2:()=>TabWidgetOLS4V2,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TabWidget_stories});var TabWidget=__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/TabWidget.tsx"),ModelTypeCheck=__webpack_require__("./src/model/ModelTypeCheck.ts"),globals=__webpack_require__("./src/app/globals.ts"),storyArgs=__webpack_require__("./src/stories/storyArgs.ts"),HierarchyWidget=__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/HierarchyWidget/HierarchyWidget.tsx");const TabWidgetStoryArgTypes={api:{control:{type:"radio"},options:[globals.wS,globals.Fv,globals.gA,globals.$R]},ontologyId:{},iri:{description:"Iri of the term you want to fetch the tab information for."},parameter:{type:{required:!1}},entityType:{type:{required:!1},table:{type:{summary:`${ModelTypeCheck.Op.join(" | ")}`}},control:{type:"radio"},options:["term","class","property","individual","","INVALID STRING"]},...storyArgs.bg,...storyArgs.DD,...storyArgs.Bw},TabWidgetStoryArgs={api:"",parameter:"collection=nfdi4health",useLegacy:!0,ontologyId:"",entityType:"",iri:"",altNamesTab:!0,hierarchyTab:!0,crossRefTab:!0,terminologyInfoTab:!0,hierarchyPreferredRoots:HierarchyWidget.QU.PREFERRED_ROOTS,hierarchyKeepExpansionStates:HierarchyWidget.QU.KEEP_EXPANSION_STATES,hierarchyShowSiblingsOnInit:HierarchyWidget.QU.SHOW_SIBLINGS_ON_INIT,onNavigateToEntity:"Console message",onNavigateToOntology:"Console message",onNavigateToDisambiguate:"Console message"},Default={storyName:"Default",args:{api:globals.gA,ontologyId:"hp",iri:"http://purl.obolibrary.org/obo/HP_0000819",useLegacy:!0}},TabWidgetOLS3={storyName:"OLS3",args:{api:globals.gA,ontologyId:"efo",iri:"http://www.ebi.ac.uk/efo/EFO_0009644",useLegacy:!0}},TabWidgetOLS4V1={storyName:"OLS4 V1",args:{api:globals.wS,ontologyId:"efo",iri:"http://www.ebi.ac.uk/efo/EFO_0009644",useLegacy:!0}},TabWidgetOLS4V2={storyName:"OLS4 V2",args:{api:globals.wS,ontologyId:"efo",iri:"http://www.ebi.ac.uk/efo/EFO_0009644",useLegacy:!1,parameter:""}},SelectingDefiningOntology={args:{api:globals.wS,iri:"http://purl.obolibrary.org/obo/IAO_0000631",entityType:"term",parameter:""}},DefiningOntologyUnavailable={args:{api:globals.wS,iri:"http://identifiers.org/uniprot/Q9VAM9",entityType:"term",parameter:""}},TabWidgetLarge={args:{api:globals.wS,ontologyId:"ncbitaxon",iri:"http://purl.obolibrary.org/obo/NCBITaxon_2489341",useLegacy:!1,parameter:""}},HiddenTabs={storyName:"Hidden Tabs",args:{api:globals.wS,ontologyId:"ncit",iri:"http://purl.obolibrary.org/obo/NCIT_C2984",entityType:"term",useLegacy:!1,parameter:"",altNamesTab:!0,hierarchyTab:!1,crossRefTab:!1,terminologyInfoTab:!1}};var widgetDescriptions=__webpack_require__("./src/app/widgetDescriptions.ts");const TabWidget_stories={title:"Additional Entity Metadata/TabWidget",component:TabWidget.g,parameters:{layout:"centered",docs:{description:{component:widgetDescriptions.Qu}}},argTypes:TabWidgetStoryArgTypes,args:TabWidgetStoryArgs},__namedExportsOrder=["Default","TabWidgetOLS3","TabWidgetOLS4V1","TabWidgetOLS4V2","SelectingDefiningOntology","DefiningOntologyUnavailable","TabWidgetLarge","HiddenTabs"]},"./src/components/widgets/MetadataWidget/TabWidget/TabWidget.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{g:()=>TabWidget});__webpack_require__("./node_modules/react/index.js");var _elastic_eui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@elastic/eui/es/components/loading/loading_spinner.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),react_query__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-query/es/index.js"),_api_OlsApi__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/api/OlsApi.ts"),_TabPresentation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/TabPresentation.tsx"),_app_util__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/util.ts"),_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/model/ModelTypeCheck.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));function TabWidget(props){const{iri,api,ontologyId,entityType,parameter,useLegacy,hierarchyTab,crossRefTab,terminologyInfoTab,altNamesTab,...rest}=props,olsApi=new _api_OlsApi__WEBPACK_IMPORTED_MODULE_2__.l(api),{data,isLoading,isSuccess,isError,error}=(0,react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)(["tabdata",api,parameter,entityType,iri,ontologyId,useLegacy],(async()=>olsApi.getEntityObject(iri,entityType,ontologyId,parameter,useLegacy)));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[isLoading&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_8__.V,{}),isError&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_9__.b,{children:(0,_app_util__WEBPACK_IMPORTED_MODULE_4__.lr)(error,"description")}),isSuccess&&data&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:(0,_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_5__.Qg)(data)?function render(data){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_TabPresentation__WEBPACK_IMPORTED_MODULE_3__._,{...rest,data,iri,api,useLegacy,entityType:data.getType(),ontologyId:ontologyId||data.getOntologyId(),hierarchyTab,crossRefTab,terminologyInfoTab,altNamesTab,onNavigateToEntity:props.onNavigateToEntity,onNavigateToOntology:props.onNavigateToOntology,onNavigateToDisambiguate:props.onNavigateToDisambiguate,hierarchyPreferredRoots:props.hierarchyPreferredRoots,hierarchyKeepExpansionStates:props.hierarchyKeepExpansionStates,hierarchyShowSiblingsOnInit:props.hierarchyShowSiblingsOnInit})}(data):null})]})}function WrappedTabWidget(props){const queryClient=new react_query__WEBPACK_IMPORTED_MODULE_1__.QueryClient;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_10__.l,{colorMode:"light",globalStyles:!1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_query__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider,{client:queryClient,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(TabWidget,{iri:props.iri,api:props.api,ontologyId:props.ontologyId,entityType:props.entityType,parameter:props.parameter,useLegacy:props.useLegacy,altNamesTab:props.altNamesTab,hierarchyTab:props.hierarchyTab,crossRefTab:props.crossRefTab,terminologyInfoTab:props.terminologyInfoTab,onNavigateToEntity:props.onNavigateToEntity,onNavigateToOntology:props.onNavigateToOntology,onNavigateToDisambiguate:props.onNavigateToDisambiguate,hierarchyPreferredRoots:props.hierarchyPreferredRoots,hierarchyKeepExpansionStates:props.hierarchyKeepExpansionStates,hierarchyShowSiblingsOnInit:props.hierarchyShowSiblingsOnInit})})})}WrappedTabWidget.displayName="WrappedTabWidget",TabWidget.__docgenInfo={description:"",methods:[],displayName:"TabWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call.\n- **Official OLS4 API of EMBL-EBI**: [https://www.ebi.ac.uk/ols4/api/](https://www.ebi.ac.uk/ols4/api/)\n- **Official SemLookP API (based on OLS3)**: [https://semanticlookup.zbmed.de/ols/api/](https://semanticlookup.zbmed.de/ols/api/)\n- **Improved SemLookP API (beta version)**: [https://semanticlookup.zbmed.de/api/](https://semanticlookup.zbmed.de/api/)\n- **OLS4 API NFDI4Health collection**: [https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/](https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/)\n- **TIB Terminology Service (OLS3)**: [https://service.tib.eu/ts4tib/api/](https://service.tib.eu/ts4tib/api/)\n- **TIB Terminology Service (OLS4)**: [https://api.terminology.tib.eu/api/](https://api.terminology.tib.eu/api/)\n- **TS4NFDI Gateway**: [https://ts4nfdi-api-gateway.prod.km.k8s.zbmed.de/api-gateway/](https://ts4nfdi-api-gateway.prod.km.k8s.zbmed.de/api-gateway/)"},entityType:{required:!1,tsType:{name:"entityTypeNames[number]",raw:"typeof entityTypeNames[number]"},description:"Sets the type of the entity whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},parameter:{required:!1,tsType:{name:"string"},description:"Additional parameters to pass to the API.\n\nEach parameter can be combined via\nthe special character <i><b>&</b></i>. The values of a parameter key can be combined with a comma sign\n<i><b>,</b></i>. The following keys could be used:<br/> <br/>\n <table>\n <thead><tr><th>Parameter</th><th>Description</th></tr></thead>\n <tr><td>lang</td><td>Set the language for the response e.g. <b><i>en</i></b>, <b><i>de</i></b>, <b><i>fr</i></b>. The default value is <b><i>en</i></b>.</td></tr>\n <tr><td>collection</td><td>Restrict a search to a terminology subset e.g. <b><i>collection=nfdi4health</i></b></td></tr>\n <tr><td>database</td><td>Restrict a search via the API Gateway to specific terminology software stacks, choose from <b><i>ols</i></b>, <b><i>ontoportal</i></b>, or <b><i>skosmos</i></b></td></tr>\n</table>"},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},altNamesTab:{required:!1,tsType:{name:"boolean"},description:"It is possible to show and hide the Alternative Names tab. **True** shows the tab. **False** hides the tab."},hierarchyTab:{required:!1,tsType:{name:"boolean"},description:"It is possible to show and hide the Hierarchy tab. **True** shows the tab. **False** hides the tab."},crossRefTab:{required:!1,tsType:{name:"boolean"},description:"It is possible to show and hide the Cross-references tab. **True** shows the tab. **False** hides the tab."},terminologyInfoTab:{required:!1,tsType:{name:"boolean"},description:"It is possible to show and hide the About Terminology Info tab. **True** shows the tab. **False** hides the tab."},onNavigateToEntity:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  ontologyId: string,\n  entityType?: string,\n  entity?: EntityData\n) => void",signature:{arguments:[{type:{name:"string"},name:"ontologyId"},{type:{name:"string"},name:"entityType"},{type:{name:"signature",type:"object",raw:"{\n  iri: string;\n  label?: string;\n  definedBy?: string[];\n  /**\n   * should be present for use with hierarchy\n   */\n  hasChildren?: boolean;\n  numDescendants?: number;\n  /**\n   * should be present for use with hierarchy\n   */\n  parents?: Reified<string>[];\n}",signature:{properties:[{key:"iri",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"definedBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"hasChildren",value:{name:"boolean",required:!1},description:"should be present for use with hierarchy"},{key:"numDescendants",value:{name:"number",required:!1}},{key:"parents",value:{name:"Array",elements:[{name:"Reified",elements:[{name:"string"}],raw:"Reified<string>"}],raw:"Reified<string>[]",required:!1},description:"should be present for use with hierarchy"}]}},name:"entity"}],return:{name:"void"}}},description:"This function is called every time an entity link is clicked\n@param ontologyId obtains the ontologyId of the current ontology\n@param entityType obtains the entityType of the clicked entity\n@param entity.iri obtains the iri of the clicked entity\n@param entity.label obtains the label of the clicked entity\n@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)\n@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities\n@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)\n@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)"},onNavigateToOntology:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  ontologyId: string,\n  entityType?: string,\n  entity?: EntityData\n) => void",signature:{arguments:[{type:{name:"string"},name:"ontologyId"},{type:{name:"string"},name:"entityType"},{type:{name:"signature",type:"object",raw:"{\n  iri: string;\n  label?: string;\n  definedBy?: string[];\n  /**\n   * should be present for use with hierarchy\n   */\n  hasChildren?: boolean;\n  numDescendants?: number;\n  /**\n   * should be present for use with hierarchy\n   */\n  parents?: Reified<string>[];\n}",signature:{properties:[{key:"iri",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"definedBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"hasChildren",value:{name:"boolean",required:!1},description:"should be present for use with hierarchy"},{key:"numDescendants",value:{name:"number",required:!1}},{key:"parents",value:{name:"Array",elements:[{name:"Reified",elements:[{name:"string"}],raw:"Reified<string>"}],raw:"Reified<string>[]",required:!1},description:"should be present for use with hierarchy"}]}},name:"entity"}],return:{name:"void"}}},description:"This function is called every time an entity link is clicked\n@param ontologyId obtains the ontologyId of the clicked badge\n@param entityType obtains the entityType of the clicked badge\n@param entity.iri obtains the iri of the clicked badge (can be empty)\n@param entity.label obtains the label of the clicked badge\n@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)\n@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities\n@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)\n@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)"},onNavigateToDisambiguate:{required:!1,tsType:{name:"signature",type:"function",raw:"(entityType: string, entity?: EntityData) => void",signature:{arguments:[{type:{name:"string"},name:"entityType"},{type:{name:"signature",type:"object",raw:"{\n  iri: string;\n  label?: string;\n  definedBy?: string[];\n  /**\n   * should be present for use with hierarchy\n   */\n  hasChildren?: boolean;\n  numDescendants?: number;\n  /**\n   * should be present for use with hierarchy\n   */\n  parents?: Reified<string>[];\n}",signature:{properties:[{key:"iri",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"definedBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"hasChildren",value:{name:"boolean",required:!1},description:"should be present for use with hierarchy"},{key:"numDescendants",value:{name:"number",required:!1}},{key:"parents",value:{name:"Array",elements:[{name:"Reified",elements:[{name:"string"}],raw:"Reified<string>"}],raw:"Reified<string>[]",required:!1},description:"should be present for use with hierarchy"}]}},name:"entity"}],return:{name:"void"}}},description:"This function is called every time a disambiguation badge is clicked\n@param entityType obtains the entityType of the clicked badge\n@param entity.iri obtains the iri of the clicked badge (can be empty)\n@param entity.label obtains the label of the clicked badge\n@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)\n@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities\n@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)\n@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)"},hierarchyPreferredRoots:{required:!1,tsType:{name:"boolean"},description:""},hierarchyKeepExpansionStates:{required:!1,tsType:{name:"boolean"},description:""},hierarchyShowSiblingsOnInit:{required:!1,tsType:{name:"boolean"},description:""}}}}}]);