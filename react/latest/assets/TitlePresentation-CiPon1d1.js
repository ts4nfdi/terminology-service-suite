import{b as e}from"./iframe-C4bF4efa.js";import{o as T}from"./widgetDescriptions-DRTzUJd7.js";import{E as n}from"./text-DxkUwwjJ.js";import{E as x}from"./loading_spinner-DhxwhVR-.js";import{E as l}from"./link-COdNsvSd.js";function j(d){const{title:r,titleText:s,isLoading:m,error:o,defaultValue:t,className:u,onNavigateTo:i,iri:p,ontologyId:f,thingType:c,href:a}=d,g=u||"ts4nfdi-title-style",y=()=>s?e.jsx(n,{children:s}):m?t?e.jsx(n,{children:t}):e.jsx(x,{size:"s"}):o?t?e.jsx(n,{children:t}):e.jsx(n,{children:T(o,"title")}):a?e.jsx(l,{href:a,children:e.jsx(n,{children:r})}):typeof i=="function"&&!i.name.includes("mockConstructor")?e.jsx(l,{href:"",onClick:h=>{h.preventDefault(),i&&i(p||"",f||"",c||"")},children:e.jsx(n,{children:r})}):e.jsx(n,{children:r});return e.jsx("div",{className:g,children:y()})}j.__docgenInfo={description:"",methods:[],displayName:"TitlePresentation",props:{titleText:{required:!1,tsType:{name:"string"},description:"Set your own text manually that overwrites the text fetched from the API"},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},thingType:{required:!1,tsType:{name:"unknown[number]",raw:"(typeof thingTypeNames)[number]"},description:"Sets the type of the thing whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},title:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},defaultValue:{required:!1,tsType:{name:"string"},description:""},isLoading:{required:!1,tsType:{name:"boolean"},description:""},error:{required:!1,tsType:{name:"union",raw:"string | unknown",elements:[{name:"string"},{name:"unknown"}]},description:""},onNavigateTo:{required:!1,tsType:{name:"signature",type:"function",raw:"(iri: string, ontologyId: string, thingType: string) => void",signature:{arguments:[{type:{name:"string"},name:"iri"},{type:{name:"string"},name:"ontologyId"},{type:{name:"string"},name:"thingType"}],return:{name:"void"}}},description:""},href:{required:!1,tsType:{name:"string"},description:""}}};export{j as T};
