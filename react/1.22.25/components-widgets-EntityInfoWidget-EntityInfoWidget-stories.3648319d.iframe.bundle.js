"use strict";(self.webpackChunk_nfdi4health_semlookp_widgets=self.webpackChunk_nfdi4health_semlookp_widgets||[]).push([[66159],{"./node_modules/@elastic/eui/es/components/spacer/spacer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>EuiSpacer});__webpack_require__("./node_modules/react/index.js");var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),hooks=__webpack_require__("./node_modules/@elastic/eui/es/services/theme/hooks.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),logicals=__webpack_require__("./node_modules/@elastic/eui/es/global_styling/functions/logicals.js");var _ref={name:"191xi1n-euiSpacer",styles:"flex-shrink:0;label:euiSpacer;"},euiSpacerStyles=function euiSpacerStyles(_ref2){var euiTheme=_ref2.euiTheme;return{euiSpacer:_ref,xs:(0,emotion_react_browser_esm.AH)(logicals.BE.height,":",euiTheme.size.xs,";;label:xs;"),s:(0,emotion_react_browser_esm.AH)(logicals.BE.height,":",euiTheme.size.s,";;label:s;"),m:(0,emotion_react_browser_esm.AH)(logicals.BE.height,":",euiTheme.size.base,";;label:m;"),l:(0,emotion_react_browser_esm.AH)(logicals.BE.height,":",euiTheme.size.l,";;label:l;"),xl:(0,emotion_react_browser_esm.AH)(logicals.BE.height,":",euiTheme.size.xl,";;label:xl;"),xxl:(0,emotion_react_browser_esm.AH)(logicals.BE.height,":",euiTheme.size.xxl,";;label:xxl;")}},_excluded=["className","size"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var EuiSpacer=function EuiSpacer(_ref){var className=_ref.className,_ref$size=_ref.size,size=void 0===_ref$size?"l":_ref$size,rest=_objectWithoutProperties(_ref,_excluded),euiTheme=(0,hooks.g)(),styles=euiSpacerStyles(euiTheme),classes=classnames_default()("euiSpacer",function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({},"euiSpacer--".concat(size),size),className),cssStyles=[styles.euiSpacer,styles[size]];return(0,emotion_react_browser_esm.Y)("div",_extends({className:classes,css:cssStyles},rest))};EuiSpacer.propTypes={className:prop_types_default().string,"aria-label":prop_types_default().string,"data-test-subj":prop_types_default().string,size:prop_types_default().any}},"./src/components/widgets/EntityInfoWidget/EntityInfoWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IndividualInfoWidget:()=>IndividualInfoWidget,InfoWidgetBadges:()=>InfoWidgetBadges,InfoWidgetDomain:()=>InfoWidgetDomain,InfoWidgetPropertyAssertion:()=>InfoWidgetPropertyAssertion,InfoWidgetPropertyCharacteristics:()=>InfoWidgetPropertyCharacteristics,InfoWidgetRange:()=>InfoWidgetRange,OptionalEntityTypeLegacyAPI:()=>OptionalEntityTypeLegacyAPI,PropertyInfoWidget:()=>PropertyInfoWidget,TermInfoWidget:()=>TermInfoWidget,__namedExportsOrder:()=>__namedExportsOrder,default:()=>EntityInfoWidget_stories});__webpack_require__("./node_modules/react/index.js");var flex_item=__webpack_require__("./node_modules/@elastic/eui/es/components/flex/flex_item.js"),spacer=__webpack_require__("./node_modules/@elastic/eui/es/components/spacer/spacer.js"),card=__webpack_require__("./node_modules/@elastic/eui/es/components/card/card.js"),loading_spinner=__webpack_require__("./node_modules/@elastic/eui/es/components/loading/loading_spinner.js"),text_text=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),provider=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),OlsApi=__webpack_require__("./src/api/OlsApi.ts"),es=__webpack_require__("./node_modules/react-query/es/index.js"),util=__webpack_require__("./src/app/util.ts"),StructureRendering=__webpack_require__("./src/model/StructureRendering.tsx"),ModelTypeCheck=__webpack_require__("./src/model/ModelTypeCheck.ts"),jsx_runtime=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));const DEFAULT_HAS_TITLE=!0;function EntityInfoWidget(props){const{api,iri,ontologyId,hasTitle=DEFAULT_HAS_TITLE,entityType,parameter,showBadges,useLegacy,...rest}=props,olsApi=new OlsApi.l(api),{data:entity,isLoading:isLoadingEntity,isSuccess:isSuccessEntity,isError:isErrorEntity,error:errorEntity}=(0,es.useQuery)(["entityInfo",props],(()=>olsApi.getEntityObject(iri,entityType,ontologyId,parameter,useLegacy)));return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(card.Gm,{title:hasTitle?(entityType?(0,util.ZH)((0,util.ng)(entityType)):isSuccessEntity&&entity?(0,util.ZH)(entity.getType()):"")+" Information":"",layout:"horizontal",children:[isLoadingEntity&&(0,jsx_runtime.jsx)(loading_spinner.V,{size:"s"}),isSuccessEntity&&void 0!==entity&&(0,jsx_runtime.jsxs)(text_text.b,{...rest,children:[function getLabelSection(entity){return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:entity.getLabel()&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(flex_item.a,{children:[(0,jsx_runtime.jsx)("b",{children:"Label:"}),entity.getLabel()]}),(0,jsx_runtime.jsx)(spacer.A,{})]})})}(entity),function getSynonymsSection(entity){return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:entity.getSynonyms().length>0&&(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(flex_item.a,{children:[(0,jsx_runtime.jsx)("b",{children:"Synonyms:"}),entity.getSynonyms().length>1?(0,jsx_runtime.jsx)("ul",{children:entity.getSynonyms().map((synonym=>(0,jsx_runtime.jsx)("li",{id:synonym.value,children:(0,StructureRendering.ij)(entity,synonym,api,showBadges)},(0,util.DU)())))}):(0,jsx_runtime.jsx)("p",{children:(0,StructureRendering.ij)(entity,entity.getSynonyms()[0],api,showBadges)})]})})})}(entity),(0,ModelTypeCheck.D4)(entity)&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[function getSubsetsSection(term){return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:term.getSubsets().length>0&&(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(flex_item.a,{children:[(0,jsx_runtime.jsx)("b",{children:"In Subsets:"}),term.getSubsets().length>1?(0,jsx_runtime.jsx)("ul",{children:term.getSubsets().map((subset=>(0,jsx_runtime.jsx)("li",{id:subset+(0,util.DU)(),children:(0,StructureRendering.FK)(term,term.getLinkedEntities(),subset,api,showBadges)},(0,util.DU)())))}):(0,jsx_runtime.jsx)("p",{children:(0,StructureRendering.FK)(term,term.getLinkedEntities(),term.getSubsets()[0],api,showBadges)})]})})})}(entity),function getHasKeySection(term){const keys=term.getHasKey();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:keys.length>0&&(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(flex_item.a,{children:[(0,jsx_runtime.jsx)("b",{children:"Has Key:"}),keys.length>1?(0,jsx_runtime.jsx)("ul",{children:keys.map((keys=>(0,jsx_runtime.jsx)("li",{children:(0,StructureRendering._u)(term,term.getLinkedEntities(),keys,api,showBadges)},(0,util.DU)())))}):(0,jsx_runtime.jsx)("p",{children:(0,StructureRendering._u)(term,term.getLinkedEntities(),keys[0],api,showBadges)})]})})})}(entity)]}),(0,ModelTypeCheck.uM)(entity)&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[function getPropertyCharacteristicsSection(property){const characteristics=property.getRdfTypes().map((type=>({"http://www.w3.org/2002/07/owl#FunctionalProperty":"Functional","http://www.w3.org/2002/07/owl#InverseFunctionalProperty":"Inverse Functional","http://www.w3.org/2002/07/owl#TransitiveProperty":"Transitive","http://www.w3.org/2002/07/owl#SymmetricProperty":"Symmetric","http://www.w3.org/2002/07/owl#AsymmetricProperty":"Asymmetric","http://www.w3.org/2002/07/owl#ReflexiveProperty":"Reflexive","http://www.w3.org/2002/07/owl#IrreflexiveProperty":"Irreflexive"}[type]))).filter((type=>!!type));return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:characteristics.length>0&&(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(flex_item.a,{children:[(0,jsx_runtime.jsx)("b",{children:"Characteristics:"}),characteristics.length>1?(0,jsx_runtime.jsx)("ul",{children:characteristics.map((characteristic=>(0,jsx_runtime.jsx)("li",{children:characteristic},(0,util.DU)()))).sort()}):(0,jsx_runtime.jsx)("p",{children:characteristics[0]})]})})})}(entity),function getDomainSection(property){const domains=property.getDomain();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:domains.length>0&&(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(flex_item.a,{children:[(0,jsx_runtime.jsx)("b",{children:"Domain:"}),domains.length>1?(0,jsx_runtime.jsx)("ul",{children:domains.map((domains=>(0,jsx_runtime.jsx)("li",{children:(0,StructureRendering._u)(property,property.getLinkedEntities(),domains,api,showBadges)},(0,util.DU)())))}):(0,jsx_runtime.jsx)("p",{children:(0,StructureRendering._u)(property,property.getLinkedEntities(),domains[0],api,showBadges)})]})})})}(entity),function getRangeSection(property){const ranges=property.getRange();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:ranges.length>0&&(0,jsx_runtime.jsxs)(flex_item.a,{children:[(0,jsx_runtime.jsx)("b",{children:"Range:"}),ranges.length>1?(0,jsx_runtime.jsx)("ul",{children:ranges.map((ranges=>(0,jsx_runtime.jsx)("li",{children:(0,StructureRendering._u)(property,property.getLinkedEntities(),ranges,api,showBadges)},(0,util.DU)())))}):(0,jsx_runtime.jsx)("p",{children:(0,StructureRendering._u)(property,property.getLinkedEntities(),ranges[0],api,showBadges)})]})})}(entity)]}),(0,ModelTypeCheck.iV)(entity)&&(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:function getIndividualPropertyAssertionsSection(individual){const propertyIris=Object.keys(individual.properties),negativeProperties=propertyIris.filter((key=>key.startsWith("negativePropertyAssertion+"))),objectProperties=propertyIris.filter((key=>individual.getLinkedEntities().get(key)&&-1!==individual.getLinkedEntities().get(key)?.type.indexOf("objectProperty"))),dataProperties=propertyIris.filter((key=>individual.getLinkedEntities().get(key)&&-1!==individual.getLinkedEntities().get(key)?.type.indexOf("dataProperty"))),propertyAssertions=[];for(const iri of objectProperties){const values=(0,util._j)(individual.properties[iri]);for(const v of values)propertyAssertions.push((0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,StructureRendering._u)(individual,individual.getLinkedEntities(),iri,api,showBadges),"string"==typeof v&&v.includes("http")?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[" ",(0,jsx_runtime.jsx)("span",{style:{fontSize:"medium",color:"gray"},children:"▸"})," ",(0,StructureRendering.FK)(individual,individual.getLinkedEntities(),v,api,showBadges)]}):(0,StructureRendering.Eg)("string"==typeof v?v:"object"==typeof v&&!Array.isArray(v)&&v.value?JSON.stringify(v.value):JSON.stringify(v))]}))}for(const iri of dataProperties){const values=(0,util._j)(individual.properties[iri]);for(const v of values)propertyAssertions.push((0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,StructureRendering._u)(individual,individual.getLinkedEntities(),iri,api,showBadges),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[" ",(0,jsx_runtime.jsx)("span",{style:{fontSize:"medium",color:"gray"},children:"▸"})," ",(0,StructureRendering.FK)(individual,individual.getLinkedEntities(),v,api,showBadges)]})]}))}for(const key of negativeProperties){const iri=key.slice(26),linkedEntity=individual.getLinkedEntities().get(iri),hasDataProperty=-1!==linkedEntity?.type.indexOf("dataProperty"),hasObjectProperty=-1!==linkedEntity?.type.indexOf("objectProperty"),values=(0,util._j)(individual.properties[key]);for(const v of values)propertyAssertions.push((0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("i",{style:{color:"purple"},children:"not"})," ",(0,StructureRendering._u)(individual,individual.getLinkedEntities(),iri,api,showBadges),"string"==typeof v&&v.includes("http")?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[" ",(0,jsx_runtime.jsx)("span",{style:{fontSize:"medium",color:"gray"},children:"▸"})," ",(0,StructureRendering.FK)(individual,individual.getLinkedEntities(),v,api,showBadges)]}):hasObjectProperty?(0,StructureRendering.Eg)("string"==typeof v?v:"object"==typeof v&&!Array.isArray(v)&&v.value?JSON.stringify(v.value):JSON.stringify(v)):hasDataProperty?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[" ",(0,jsx_runtime.jsx)("span",{style:{fontSize:"medium",color:"gray"},children:"▸"})," ",(0,StructureRendering.FK)(individual,individual.getLinkedEntities(),v,api,showBadges)]}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{})]}))}return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:propertyAssertions.length>0&&(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(flex_item.a,{children:[(0,jsx_runtime.jsx)("b",{children:"Property assertions:"}),propertyAssertions.length>1?(0,jsx_runtime.jsx)("ul",{children:propertyAssertions.map((pa=>(0,jsx_runtime.jsx)("li",{children:pa},(0,util.DU)()))).sort()}):(0,jsx_runtime.jsx)("p",{children:propertyAssertions[0]})]})})})}(entity)}),function getAnnotationSection(thing){return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:thing.getAnnotationPredicates().map((annoKey=>{const annos=thing.getAnnotationById(annoKey);return 0==annos.length?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{}):(0,jsx_runtime.jsxs)(flex_item.a,{grow:!1,children:[(0,jsx_runtime.jsxs)("b",{children:[(0,util.ZH)((0,util.s0)((0,util.Mv)(thing.getAnnotationTitleById(annoKey)))),":"]}),annos.length>1?(0,jsx_runtime.jsx)("ul",{children:annos.map((annotation=>(0,jsx_runtime.jsx)("li",{id:annotation.value,children:(0,StructureRendering.ij)(thing,annotation,api,showBadges)},(0,util.DU)())))}):(0,jsx_runtime.jsx)("p",{children:(0,StructureRendering.ij)(thing,annos[0],api,showBadges)},(0,util.DU)())]},annoKey)}))})}(entity)]}),isErrorEntity&&(0,jsx_runtime.jsx)(text_text.b,{children:(0,util.lr)(errorEntity,"information")})]})})}function WrappedEntitiyInfoWidget(props){const queryClient=new es.QueryClient;return(0,jsx_runtime.jsx)(provider.l,{colorMode:"light",children:(0,jsx_runtime.jsx)(es.QueryClientProvider,{client:queryClient,children:(0,jsx_runtime.jsx)(EntityInfoWidget,{api:props.api,iri:props.iri,ontologyId:props.ontologyId,hasTitle:props.hasTitle,entityType:props.entityType,parameter:props.parameter,useLegacy:props.useLegacy,showBadges:props.showBadges})})})}WrappedEntitiyInfoWidget.displayName="WrappedEntitiyInfoWidget",EntityInfoWidget.__docgenInfo={description:"",methods:[],displayName:"EntityInfoWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call.\n- **Official OLS4 API of EMBL-EBI**: [https://www.ebi.ac.uk/ols4/api/](https://www.ebi.ac.uk/ols4/api/)\n- **Official SemLookP API (based on OLS3)**: [https://semanticlookup.zbmed.de/ols/api/](https://semanticlookup.zbmed.de/ols/api/)\n- **Improved SemLookP API (beta version)**: [https://semanticlookup.zbmed.de/api/](https://semanticlookup.zbmed.de/api/)\n- **OLS4 API NFDI4Health collection**: [https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/](https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/)\n- **TIB Terminology Service**: [https://service.tib.eu/ts4tib/api/](https://service.tib.eu/ts4tib/api/)"},entityType:{required:!1,tsType:{name:"entityTypeNames[number]",raw:"typeof entityTypeNames[number]"},description:"Sets the type of the entity whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},hasTitle:{required:!1,tsType:{name:"boolean"},description:"Show title, default is true"},showBadges:{required:!1,tsType:{name:"boolean"},description:"If true (default), entity badges linking to their defining ontologies are shown."},parameter:{required:!1,tsType:{name:"string"},description:"Additional parameters to pass to the API.\n\nThis parameters can be used to filter the search results. Each parameter can be combined via\nthe special character <i><b>&</b></i>. The values of a parameter key can be combined with a comma sign\n<i><b>,</b></i>. The following keys could be used:<br/> <br/>\n <table>\n <thead><tr><th>Parameter</th><th>Description</th></tr></thead>\n <tr><td>ontology</td><td>Restrict a search to a set of ontologies e.g. ontology=uberon,mesh</td></tr>\n <tr><td>type</td><td>Restrict a search to an entity type, one of {class,property,individual,ontology}</td></tr>\n <tr><td>slim</td><td>Restrict a search to a particular set of slims by name</td></tr>\n <tr><td>fieldList</td><td>Specify the fields to return. Defaults are {iri,label,short_form,obo_id,ontology_name,ontology_prefix,description,type}</td></tr>\n <tr><td>obsoletes</td><td>Set to true to include obsolete terms in the results</td></tr>\n <tr><td>local</td><td>Set to true to only return terms that are in a defining ontology, e.g. only return matches to gene ontology terms in the gene ontology, and exclude ontologies where those terms are also referenced</td></tr>\n <tr><td>childrenOf</td><td>You can restrict a search to all children of a given term. Supply a list of IRI for the terms that you want to search under (subclassOf/is-a relation only)</td></tr>\n <tr><td>allChildrenOf</td><td>You can restrict a search to all children of a given term. Supply a list of IRI for the terms that you want to search under (subclassOf/is-a plus any hierarchical/transitive properties like 'part of' or 'develops from')</td></tr>\n <tr><td>rows</td><td>Set results per page</td></tr>\n <tr><td>start</td><td>Set the results page number</td></tr>\n <tr><td>collection</td><td>Restrict a search to a terminology subset e.g. collection=nfdi4health</td></tr>\n</table>"},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."}}};const EntityInfoWidgetStoryArgTypes={api:{control:{type:"radio"},options:["https://www.ebi.ac.uk/ols4/api/","https://semanticlookup.zbmed.de/ols/api/","https://semanticlookup.zbmed.de/api/","https://service.tib.eu/ts4tib/api/"]},hasTitle:{type:{required:!1},table:{defaultValue:{summary:!0}}},ontologyId:{table:{defaultValue:{summary:void 0}}},entityType:{type:{required:!1},control:{type:"radio"},table:{type:{summary:`${ModelTypeCheck.Op.join(" | ")}`}},options:["term","class","property","individual","INVALID STRING",""]},iri:{},parameter:{type:{required:!1},table:{defaultValue:{summary:void 0}}},showBadges:{type:{required:!1},table:{defaultValue:{summary:!0}}},useLegacy:{type:{required:!1},table:{defaultValue:{summary:!0}}}},TermInfoWidget={args:{iri:"http://purl.obolibrary.org/obo/NCIT_C2985",entityType:"term",ontologyId:"ncit",hasTitle:!0}},PropertyInfoWidget={args:{iri:"http://www.w3.org/2004/02/skos/core#altLabel",entityType:"property",ontologyId:"mesh"}},IndividualInfoWidget={args:{iri:"http://purl.obolibrary.org/obo/IAO_0000423",entityType:"individual",ontologyId:"clo"}},InfoWidgetBadges={args:{api:"https://www.ebi.ac.uk/ols4/api/",useLegacy:!1,entityType:"class",iri:"http://purl.obolibrary.org/obo/UBERON_0000006",ontologyId:"uberon"}},OptionalEntityTypeLegacyAPI={args:{api:"https://semanticlookup.zbmed.de/ols/api/",iri:"http://purl.obolibrary.org/obo/NCIT_C88403"}},InfoWidgetDomain={args:{api:"https://www.ebi.ac.uk/ols4/api/",useLegacy:!1,iri:"http://purl.obolibrary.org/obo/NCIT_R89"}},InfoWidgetRange={args:{api:"https://www.ebi.ac.uk/ols4/api/",useLegacy:!1,iri:"http://purl.obolibrary.org/obo/RO_0002029"}},InfoWidgetPropertyAssertion={args:{api:"https://www.ebi.ac.uk/ols4/api/",useLegacy:!1,iri:"http://purl.obolibrary.org/obo/ENVO_01001569"}},InfoWidgetPropertyCharacteristics={args:{api:"https://www.ebi.ac.uk/ols4/api/",useLegacy:!1,iri:"http://purl.obolibrary.org/obo/MICRO_0001603"}},EntityInfoWidget_stories={title:"EntityInfoWidget",component:EntityInfoWidget,parameters:{layout:"centered"},argTypes:EntityInfoWidgetStoryArgTypes,args:{api:"https://semanticlookup.zbmed.de/api/",hasTitle:!0,showBadges:!0,useLegacy:!0,ontologyId:"",entityType:"",parameter:""}},__namedExportsOrder=["TermInfoWidget","PropertyInfoWidget","IndividualInfoWidget","InfoWidgetBadges","InfoWidgetDomain","InfoWidgetPropertyAssertion","InfoWidgetPropertyCharacteristics","InfoWidgetRange","OptionalEntityTypeLegacyAPI"]}}]);