"use client";import{b as n}from"./iframe-wk1mlfou.js";import{u as f}from"./useQuery-wZqAoEXu.js";import{O as y,aX as u,aT as h}from"./widgetDescriptions-BxPwfV77.js";import{C as g}from"./CrossRefTabPresentation-DewXJeE2.js";function T(c){const{iri:t,api:i,parameter:s,entityType:r,ontologyId:a,useLegacy:o,className:d}=c,p=new y(i),{data:e,isLoading:l,error:b}=f(["crossRefTab",i,s,r,t,a,o],async()=>p.getEntityObject(t,r,a,s,o));return n.jsx("div",{"data-testid":"cross-ref",children:n.jsx(g,{crossrefs:e?h(e)?u.fromJson(e.getCrossReferences()).map(m=>m.value):[]:[],isLoading:l,error:b,className:d})})}T.__docgenInfo={description:"",methods:[],displayName:"CrossRefTabWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call."},entityType:{required:!1,tsType:{name:"unknown[number]",raw:"(typeof entityTypeNames)[number]"},description:"Sets the type of the entity whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},parameter:{required:!1,tsType:{name:"string"},description:`Additional parameters to pass to the API.

Each parameter can be combined via
the special character <i><b>&</b></i>. The values of a parameter key can be combined with a comma sign
<i><b>,</b></i>. The following keys could be used:<br/> <br/>
 <table>
 <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
 <tr><td>lang</td><td>Set the language for the response e.g. <b><i>en</i></b>, <b><i>de</i></b>, <b><i>fr</i></b>. The default value is <b><i>en</i></b>.</td></tr>
 <tr><td>collection</td><td>Restrict a search to a terminology subset e.g. <b><i>collection=nfdi4health</i></b></td></tr>
 <tr><td>database</td><td>Restrict a search via the API Gateway to specific terminology software stacks, choose from <b><i>ols</i></b>, <b><i>ontoportal</i></b>, or <b><i>skosmos</i></b></td></tr>
</table>`},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"}}};export{T as C};
