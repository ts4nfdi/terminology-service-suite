"use strict";(self.webpackChunk_ts4nfdi_terminology_service_suite=self.webpackChunk_ts4nfdi_terminology_service_suite||[]).push([[28383],{"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/style/ts4nfdiStyles/ts4nfdiResourcesStyle.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'.ts4nfdi-resources-style * {\n  font-family: "Inter", BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n}\n',"",{version:3,sources:["webpack://./src/style/ts4nfdiStyles/ts4nfdiResourcesStyle.css"],names:[],mappings:"AAAA;EACE,sEAAsE;AACxE",sourcesContent:['.ts4nfdi-resources-style * {\n  font-family: "Inter", BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/app/globals.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$R:()=>TIB_API_ENDPOINT,Kb:()=>GATEWAY_API_ENDPOINT,RC:()=>ZBMED_OLS4_API,gB:()=>ZBMED_OLS3_API,o6:()=>FINTO_V1_API_ENDPOINT,wS:()=>EBI_API_ENDPOINT});const TIB_API_ENDPOINT="https://api.terminology.tib.eu/api/",GATEWAY_API_ENDPOINT="https://terminology.services.base4nfdi.de/api-gateway/",ZBMED_OLS4_API="https://semanticlookup.zbmed.de/ols/api/",ZBMED_OLS3_API="https://ols3-semanticlookup.zbmed.de/ols/api/",EBI_API_ENDPOINT="https://www.ebi.ac.uk/ols4/api/",FINTO_V1_API_ENDPOINT="https://api.finto.fi/rest/v1"},"./src/components/widgets/ResourcesWidget/ResourcesWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResourcesWidget1:()=>ResourcesWidget1,ResourcesWidgetLogos:()=>ResourcesWidgetLogos,WithActions:()=>WithActions,WithActionsAndSafety:()=>WithActionsAndSafety,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ResourcesWidget_stories});var react=__webpack_require__("./node_modules/react/index.js"),link_link=__webpack_require__("./node_modules/@elastic/eui/es/components/link/link.js"),button_icon=__webpack_require__("./node_modules/@elastic/eui/es/components/button/button_icon/button_icon.js"),comparators=__webpack_require__("./node_modules/@elastic/eui/es/services/sort/comparators.js"),description_list=__webpack_require__("./node_modules/@elastic/eui/es/components/description_list/description_list.js"),screen_reader_only=__webpack_require__("./node_modules/@elastic/eui/es/components/accessibility/screen_reader_only/screen_reader_only.js"),call_out=__webpack_require__("./node_modules/@elastic/eui/es/components/call_out/call_out.js"),spacer=__webpack_require__("./node_modules/@elastic/eui/es/components/spacer/spacer.js"),text_text=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),horizontal_rule=__webpack_require__("./node_modules/@elastic/eui/es/components/horizontal_rule/horizontal_rule.js"),basic_table=__webpack_require__("./node_modules/@elastic/eui/es/components/basic_table/basic_table.js"),provider=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),es=__webpack_require__("./node_modules/react-query/es/index.js"),OlsApi=__webpack_require__("./src/api/OlsApi.ts"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),util=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./src/app/util.ts")),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),ts4nfdiResourcesStyle=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/style/ts4nfdiStyles/ts4nfdiResourcesStyle.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(ts4nfdiResourcesStyle.A,options);ts4nfdiResourcesStyle.A&&ts4nfdiResourcesStyle.A.locals&&ts4nfdiResourcesStyle.A.locals;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const DEFAULT_INITIAL_ENTRIES_PER_PAGE=10,DEFAULT_PAGE_SIZE_OPTIONS=[10,25,50,100],DEFAULT_INITIAL_SORT_FIELD="config.preferredPrefix",DEFAULT_INITIAL_SORT_DIR="asc",DEFAULT_USE_LEGACY=!0;function ResourcesWidget(props){const{api,initialEntriesPerPage=DEFAULT_INITIAL_ENTRIES_PER_PAGE,pageSizeOptions=DEFAULT_PAGE_SIZE_OPTIONS,initialSortField=DEFAULT_INITIAL_SORT_FIELD,initialSortDir=DEFAULT_INITIAL_SORT_DIR,onNavigate,parameter,useLegacy=DEFAULT_USE_LEGACY,actions,className,...rest}=props,olsApi=new OlsApi.l(api),[pageIndex,setPageIndex]=(0,react.useState)(0),[pageSize,setPageSize]=(0,react.useState)(initialEntriesPerPage),[sortField,setSortField]=(0,react.useState)(initialSortField),[sortDirection,setSortDirection]=(0,react.useState)(initialSortDir),[itemIdToExpandedRowMap,setItemIdToExpandedRowMap]=(0,react.useState)({}),finalClassName=className||"ts4nfdi-resources-style",columns=[{name:"Logo",field:"config.logo",render:logoUrl=>logoUrl?(0,jsx_runtime.jsx)("img",{width:"100%",style:{objectFit:"contain"},src:logoUrl.startsWith("/images")?util.Pg+logoUrl:logoUrl,alt:"-logo-"}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{}),width:"7%",sortable:!1},{name:"Resource Name",field:"config.title",width:"15%",sortable:!0},{name:"Short Name",field:"ontologyId",render:ontologyId=>(0,jsx_runtime.jsx)(link_link.q,{href:"#",onClick:e=>{e.preventDefault(),onNavigate&&onNavigate(ontologyId||"")},children:ontologyId}),width:"10%",sortable:!0},{name:"Description",field:"config.description",css:emotion_react_browser_esm.AH`
        display: block;
        max-height: 200px;
        overflow: auto;
      `},{name:"Version",field:"config.version",width:"7%"},{name:"Loaded on",field:"loaded",width:"8%",dataType:"date",sortable:!0},{name:"Terms",field:"numberOfTerms",render:value=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:value.toLocaleString()}),width:"7%",sortable:!0},{name:"Properties",field:"numberOfProperties",render:value=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:value.toLocaleString()}),width:"7%",sortable:!0},{name:"Individuals",field:"numberOfIndividuals",render:value=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:value.toLocaleString()}),width:"7%",sortable:!0},{width:"2%",actions:[...props.actions||[],{render:item=>(0,jsx_runtime.jsx)(button_icon.Jd,{href:item.config.fileLocation,iconType:"download","aria-label":"Download",isDisabled:!item.config.allowDownload||!item.config.fileLocation||item.config.fileLocation.startsWith("file://")})}]}],onTableChange=_ref=>{let{page,sort}=_ref;const{index:pageIndex,size:pageSize}=page;if(setPageIndex(pageIndex),setPageSize(pageSize),sort){const{field:sortField,direction:sortDirection}=sort;setSortField(sortField),setSortDirection(sortDirection)}},{data:ontologiesData,isSuccess,isError,isLoading}=(0,es.useQuery)(["ontologiesData",api,parameter,useLegacy],(async()=>olsApi.getOntologiesData(props.parameter,useLegacy)));const ontos=useLegacy?ontologiesData?.properties.map((ontology=>({...ontology.properties})))||[]:ontologiesData?.properties.map((ontology=>function v2toOlsResource(ontology){return{ontologyId:ontology.getOntologyId(),loaded:ontology.getLoaded(),numberOfTerms:ontology.getNumClasses(),numberOfProperties:ontology.getNumProperties(),numberOfIndividuals:ontology.getNumIndividuals(),config:{logo:ontology.getLogoURL(),title:ontology.getName().trim(),description:ontology.getDescription(),preferredPrefix:ontology.getPreferredPrefix(),allowDownload:ontology.getAllowDownload(),fileLocation:ontology.getIri(),version:ontology.getVersion(),iri:ontology.getIri(),homepage:ontology.getHomepage(),annotations:{license:ontology.getLicense()}}}}(ontology)))||[],{pageOfItems,totalItemCount}=((ontologies,pageIndex,pageSize,sortField,sortDirection)=>{let items,pageOfItems;if(items=sortField?ontologies.slice(0).sort(comparators.m.property(sortField,comparators.m.default(sortDirection))):ontologies,pageIndex||pageSize){const startIndex=pageIndex*pageSize;pageOfItems=items.slice(startIndex,Math.min(startIndex+pageSize,ontologies.length))}else pageOfItems=items;return{pageOfItems,totalItemCount:ontologies.length}})(ontos,pageIndex,pageSize,sortField,sortDirection),pagination={pageIndex,pageSize,totalItemCount,pageSizeOptions},resultsCount=0===pageSize?(0,jsx_runtime.jsx)("strong",{children:"All"}):(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("strong",{children:[pageSize*pageIndex+1,"-",pageSize*pageIndex+pageSize]})," ","of ",totalItemCount]}),sorting={sort:{field:sortField,direction:sortDirection}},columnsWithExpandingRowToggle=[...columns,{align:"right",width:"40px",isExpander:!0,name:(0,jsx_runtime.jsx)(screen_reader_only.T,{children:(0,jsx_runtime.jsx)("span",{children:"Expand row"})}),mobileOptions:{header:!1},render:resource=>{const itemIdToExpandedRowMapValues={...itemIdToExpandedRowMap};return(0,jsx_runtime.jsx)(button_icon.Jd,{onClick:()=>{(resource=>{const itemIdToExpandedRowMapValues={...itemIdToExpandedRowMap};if(itemIdToExpandedRowMapValues[resource.ontologyId])delete itemIdToExpandedRowMapValues[resource.ontologyId];else{let homepage=null,licenseUrl="",licenseLabel="";if(resource.config.homepage&&(homepage=resource.config.homepage),resource?.config?.annotations?.license){const license=resource.config.annotations.license;useLegacy?""!==license[0]&&(licenseUrl=`https://${license[0]}`,licenseLabel=license[0]):(licenseUrl=license.url?license.url:"",licenseLabel=license.label?license.label:"")}const listItems=[];homepage&&listItems.push({title:"Homepage",description:(0,jsx_runtime.jsx)(link_link.q,{href:`${homepage||"-"}`,children:`${homepage||"-"}`})}),""!==licenseLabel&&listItems.push({title:"License",description:(0,jsx_runtime.jsx)(link_link.q,{href:`${""!==licenseUrl?licenseUrl:null}`,children:`${licenseLabel}`})}),itemIdToExpandedRowMapValues[resource.ontologyId]=(0,jsx_runtime.jsx)(description_list.G,{listItems})}setItemIdToExpandedRowMap(itemIdToExpandedRowMapValues)})(resource)},iconType:itemIdToExpandedRowMapValues[resource.ontologyId]?"arrowDown":"arrowRight","aria-label":itemIdToExpandedRowMapValues[resource.ontologyId]?"Collapse":"Expand"})}}];return(0,jsx_runtime.jsxs)("div",{className:finalClassName,children:[isSuccess&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(call_out.yP,{title:"Licenses",iconType:"magnifyWithExclamation",color:"warning",children:(0,jsx_runtime.jsx)("p",{children:"The use and distribution of the terminologies beyond this service is only permitted in compliance with the license conditions of the respective terminology, also in compliance with the license conditions in the respective countries."})}),(0,jsx_runtime.jsx)(spacer.A,{size:"s"}),(0,jsx_runtime.jsxs)(text_text.b,{size:"xs",children:["Showing ",resultsCount," ",(0,jsx_runtime.jsx)("strong",{children:"Ontologies"})]}),(0,jsx_runtime.jsx)(spacer.A,{size:"s"}),(0,jsx_runtime.jsx)(horizontal_rule.wl,{margin:"none",style:{height:2}}),(0,jsx_runtime.jsx)(basic_table.I,{columns:columnsWithExpandingRowToggle,items:pageOfItems,onChange:onTableChange,pagination,sorting,itemIdToExpandedRowMap,itemId:"ontologyId",...rest})]}),isLoading&&(0,jsx_runtime.jsx)(basic_table.I,{columns:columnsWithExpandingRowToggle,items:pageOfItems,onChange:onTableChange,pagination,sorting,loading:!0,...rest}),isError&&(0,jsx_runtime.jsx)(basic_table.I,{columns,items:pageOfItems,onChange:onTableChange,pagination,sorting,...rest})]})}function WrappedResourcesWidget(props){const queryClient=new es.QueryClient;return(0,jsx_runtime.jsx)(provider.l,{colorMode:"light",children:(0,jsx_runtime.jsx)(es.QueryClientProvider,{client:queryClient,children:(0,jsx_runtime.jsx)(ResourcesWidget,{api:props.api,initialEntriesPerPage:props.initialEntriesPerPage,pageSizeOptions:props.pageSizeOptions,initialSortField:props.initialSortField,initialSortDir:props.initialSortDir,actions:props.actions,parameter:props.parameter})})})}ResourcesWidget.displayName="ResourcesWidget",WrappedResourcesWidget.displayName="WrappedResourcesWidget",ResourcesWidget.__docgenInfo={description:"",methods:[],displayName:"ResourcesWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call."},parameter:{required:!1,tsType:{name:"string"},description:""},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},initialEntriesPerPage:{required:!1,tsType:{name:"number"},description:"Initial number of entries displayed per page."},pageSizeOptions:{required:!1,tsType:{name:"Array",elements:[{name:"number"}],raw:"number[]"},description:"Possible values for number of entries displayed per page."},initialSortField:{required:!1,tsType:{name:"string"},description:"Column the table is sorted by initially."},initialSortDir:{required:!1,tsType:{name:"union",raw:'"asc" | "desc"',elements:[{name:"literal",value:'"asc"'},{name:"literal",value:'"desc"'}]},description:"Initial sorting direction."},actions:{required:!1,tsType:{name:"Array",elements:[{name:"Action",elements:[{name:"intersection",raw:"ForcedOntologyIdObj & {\n  loaded: string;\n  numberOfTerms: number;\n  numberOfProperties: number;\n  numberOfIndividuals: number;\n  config: {\n    logo?: string;\n    title: string;\n    description: string;\n    preferredPrefix: string;\n    allowDownload: boolean;\n    fileLocation: string;\n    version?: string;\n    [otherFields: string]: unknown;\n  };\n  [otherFields: string]: unknown;\n}",elements:[{name:"signature",type:"object",raw:"{\n  /**\n   * Select a specific ontology by id\n   */\n  ontologyId: string;\n}",signature:{properties:[{key:"ontologyId",value:{name:"string",required:!0},description:"Select a specific ontology by id"}]}},{name:"signature",type:"object",raw:"{\n  loaded: string;\n  numberOfTerms: number;\n  numberOfProperties: number;\n  numberOfIndividuals: number;\n  config: {\n    logo?: string;\n    title: string;\n    description: string;\n    preferredPrefix: string;\n    allowDownload: boolean;\n    fileLocation: string;\n    version?: string;\n    [otherFields: string]: unknown;\n  };\n  [otherFields: string]: unknown;\n}",signature:{properties:[{key:"loaded",value:{name:"string",required:!0}},{key:"numberOfTerms",value:{name:"number",required:!0}},{key:"numberOfProperties",value:{name:"number",required:!0}},{key:"numberOfIndividuals",value:{name:"number",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:"{\n  logo?: string;\n  title: string;\n  description: string;\n  preferredPrefix: string;\n  allowDownload: boolean;\n  fileLocation: string;\n  version?: string;\n  [otherFields: string]: unknown;\n}",signature:{properties:[{key:"logo",value:{name:"string",required:!1}},{key:"title",value:{name:"string",required:!0}},{key:"description",value:{name:"string",required:!0}},{key:"preferredPrefix",value:{name:"string",required:!0}},{key:"allowDownload",value:{name:"boolean",required:!0}},{key:"fileLocation",value:{name:"string",required:!0}},{key:"version",value:{name:"string",required:!1}},{key:{name:"string"},value:{name:"unknown",required:!0}}]},required:!0}},{key:{name:"string"},value:{name:"unknown",required:!0}}]}}]}],raw:"Action<OlsResource>"}],raw:"Array<Action<OlsResource>>"},description:"Pass actions to each item in the table."},onNavigate:{required:!1,tsType:{name:"signature",type:"function",raw:"(ontologyId: string) => void",signature:{arguments:[{type:{name:"string"},name:"ontologyId"}],return:{name:"void"}}},description:"This function is called every time an ontology link is clicked."}}};var button_button=__webpack_require__("./node_modules/@elastic/eui/es/components/button/button.js"),globals=__webpack_require__("./src/app/globals.ts"),storyArgs=__webpack_require__("./src/stories/storyArgs.ts");const ResourcesWidgetStoryArgTypes={...storyArgs.dg,...storyArgs.Vo,...storyArgs.zZ,...storyArgs.V1,...storyArgs.we,...storyArgs.eU,...storyArgs.ch,...storyArgs.bp,...storyArgs.lK},ResourcesWidget1={args:{api:globals.RC,initialEntriesPerPage:100,pageSizeOptions:[10,25,50,100],initialSortField:"config.preferredPrefix",initialSortDir:"asc",onNavigate:"Console message",parameter:"collection=nfdi4health"}},WithActions={args:{...ResourcesWidget1.args,actions:[{render:item=>(0,jsx_runtime.jsx)(button_icon.Jd,{href:"",iconType:"search","aria-label":"Search"})},{render:item=>(0,jsx_runtime.jsx)(button_button.oO,{href:"",size:"s",children:"Show terms"})},{render:item=>(0,jsx_runtime.jsx)(button_button.oO,{href:"",size:"s",children:"Show properties"})},{render:item=>(0,jsx_runtime.jsx)(button_button.oO,{href:"",size:"s",children:"Show individuals"})}]}},WithActionsAndSafety={args:{...WithActions.args,parameter:"collection=safety"}},ResourcesWidgetLogos={args:{api:globals.wS,initialEntriesPerPage:100,pageSizeOptions:[10,25,50,100],initialSortField:"config.preferredPrefix",initialSortDir:"asc",targetLink:"https://semanticlookup.zbmed.de/dev/",parameter:"",useLegacy:!1}};const ResourcesWidget_stories={title:"Ontology Metadata/ResourcesWidget",component:ResourcesWidget,parameters:{layout:"centered",docs:{description:{component:__webpack_require__("./src/app/widgetDescriptions.ts").ED}}},argTypes:ResourcesWidgetStoryArgTypes,args:{api:"",useLegacy:!0,initialEntriesPerPage:100,pageSizeOptions:[10,25,50,100],initialSortField:"config.preferredPrefix",initialSortDir:"asc",actions:[],onNavigate:"Console message",parameter:"collection=nfdi4health"}},__namedExportsOrder=["ResourcesWidget1","WithActions","WithActionsAndSafety","ResourcesWidgetLogos"]}}]);