"use strict";(self.webpackChunk_ts4nfdi_terminology_service_suite=self.webpackChunk_ts4nfdi_terminology_service_suite||[]).push([[16831],{"./src/app/globals.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$R:()=>TIB_API_ENDPOINT,Kb:()=>GATEWAY_API_ENDPOINT,RC:()=>ZBMED_OLS4_API,gB:()=>ZBMED_OLS3_API,o6:()=>FINTO_V1_API_ENDPOINT,wS:()=>EBI_API_ENDPOINT});const TIB_API_ENDPOINT="https://api.terminology.tib.eu/api/",GATEWAY_API_ENDPOINT="https://terminology.services.base4nfdi.de/api-gateway/",ZBMED_OLS4_API="https://semanticlookup.zbmed.de/ols/api/",ZBMED_OLS3_API="https://ols3-semanticlookup.zbmed.de/ols/api/",EBI_API_ENDPOINT="https://www.ebi.ac.uk/ols4/api/",FINTO_V1_API_ENDPOINT="https://api.finto.fi/rest/v1"},"./src/components/widgets/SearchBarWidget/SearchBarWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SearchBarWidgetDefault:()=>SearchBarWidgetDefault,TibDataPlant:()=>TibDataPlant,TibNFDI4CHEM:()=>TibNFDI4CHEM,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SearchBarWidget_stories});var SearchBarWidget=__webpack_require__("./src/components/widgets/SearchBarWidget/SearchBarWidget.tsx"),globals=__webpack_require__("./src/app/globals.ts"),storyArgs=__webpack_require__("./src/stories/storyArgs.ts"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const SearchBarWidgetStoryArgTypes={...storyArgs.dg,...storyArgs.LU,...storyArgs.ch,...storyArgs.X$},SearchBarWidgetStoryArgsReact={api:"",query:"",selectionChangedEvent:(0,dist.XI)("selectionChangedEvent"),parameter:"collection=nfdi4health"},SearchBarWidgetDefault={args:{api:globals.wS,query:"*"}},TibNFDI4CHEM={args:{api:globals.$R,parameter:"classification=NFDI4CHEM&schema=collection"}},TibDataPlant={args:{api:globals.$R,parameter:"classification=DataPLANT&schema=collection"}};var widgetDescriptions=__webpack_require__("./src/app/widgetDescriptions.ts");const SearchBarWidget_stories={title:"Search/SearchBarWidget",component:SearchBarWidget.k,parameters:{docs:{description:{component:widgetDescriptions.An}}},argTypes:SearchBarWidgetStoryArgTypes,args:SearchBarWidgetStoryArgsReact},__namedExportsOrder=["SearchBarWidgetDefault","TibNFDI4CHEM","TibDataPlant"]},"./src/components/widgets/SearchBarWidget/SearchBarWidget.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>SearchBarWidget});var _elastic_eui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@elastic/eui/es/components/combo_box/combo_box.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_api_OlsApi__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/api/OlsApi.ts"),react_query__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-query/es/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));function SearchBarWidget(props){const{api,query,selectionChangedEvent,...rest}=props,olsApi=new _api_OlsApi__WEBPACK_IMPORTED_MODULE_1__.l(api),[options,setOptions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(),[selectedOptions,setSelected]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),[searchValue,setSearchValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(query),{isLoading}=(0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)(["suggestions",searchValue],(async()=>{if(searchValue.trim())return olsApi.suggest({query:searchValue},void 0,void 0,props.parameter).then((response=>{response.response&&response.response.docs&&setOptions(response.response.docs.map((suggestion=>({label:suggestion.autosuggest,type:{color:"tint1",iconType:""}}))))}))}));return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{selectionChangedEvent(selectedOptions.map((selectedOption=>({label:selectedOption.label}))))}),[selectedOptions]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_5__.X,{id:"suggest",isClearable:!0,"aria-label":"searchBar",fullWidth:!0,async:!0,placeholder:"Search",singleSelection:!0,isLoading,options,selectedOptions,onChange:selectedOption=>{setSelected(selectedOption)},onCreateOption:searchValue=>{if(!searchValue.trim().toLowerCase())return;setSelected([{label:searchValue}])},onSearchChange:item=>{setSearchValue(item)}})})}function WrappedSearchBarWidget(props){const queryClient=new react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClient;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_6__.l,{colorMode:"light",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClientProvider,{client:queryClient,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(SearchBarWidget,{api:props.api,query:props.query,selectionChangedEvent:props.selectionChangedEvent,parameter:props.parameter})})})}WrappedSearchBarWidget.displayName="WrappedSearchBarWidget",SearchBarWidget.__docgenInfo={description:"",methods:[],displayName:"SearchBarWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call."},parameter:{required:!1,tsType:{name:"string"},description:""},query:{required:!0,tsType:{name:"string"},description:"The search term to receive suggestions for."},selectionChangedEvent:{required:!0,tsType:{name:"signature",type:"function",raw:"(\n  selectedOptions: {\n    label: string;\n    iri?: string;\n    ontology_name?: string;\n    type?: string;\n  }[],\n) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  iri?: string;\n  ontology_name?: string;\n  type?: string;\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"iri",value:{name:"string",required:!1}},{key:"ontology_name",value:{name:"string",required:!1}},{key:"type",value:{name:"string",required:!1}}]}}],raw:"{\n  label: string;\n  iri?: string;\n  ontology_name?: string;\n  type?: string;\n}[]"},name:"selectedOptions"}],return:{name:"void"}}},description:"A method that is called once the set of selection changes\n@param selectedOptions  The selected items"}}}}}]);