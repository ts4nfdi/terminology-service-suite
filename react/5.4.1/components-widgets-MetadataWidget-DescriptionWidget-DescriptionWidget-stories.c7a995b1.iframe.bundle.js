"use strict";(self.webpackChunk_ts4nfdi_terminology_service_suite=self.webpackChunk_ts4nfdi_terminology_service_suite||[]).push([[19551],{"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/style/ts4nfdiStyles/ts4nfdiDescriptionStyle.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'.ts4nfdi-description-style * {\n  font-family: "Inter", BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n}\n',"",{version:3,sources:["webpack://./src/style/ts4nfdiStyles/ts4nfdiDescriptionStyle.css"],names:[],mappings:"AAAA;EACE,sEAAsE;AACxE",sourcesContent:['.ts4nfdi-description-style * {\n  font-family: "Inter", BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/app/globals.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$R:()=>TIB_API_ENDPOINT,Kb:()=>GATEWAY_API_ENDPOINT,RC:()=>ZBMED_OLS4_API,gB:()=>ZBMED_OLS3_API,o6:()=>FINTO_V1_API_ENDPOINT,wS:()=>EBI_API_ENDPOINT});const TIB_API_ENDPOINT="https://api.terminology.tib.eu/api/",GATEWAY_API_ENDPOINT="https://terminology.services.base4nfdi.de/api-gateway/",ZBMED_OLS4_API="https://semanticlookup.zbmed.de/ols/api/",ZBMED_OLS3_API="https://ols3-semanticlookup.zbmed.de/ols/api/",EBI_API_ENDPOINT="https://www.ebi.ac.uk/ols4/api/",FINTO_V1_API_ENDPOINT="https://api.finto.fi/rest/v1"},"./src/components/widgets/MetadataWidget/DescriptionWidget/DescriptionPresentation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>DescriptionPresentation});__webpack_require__("./node_modules/react/index.js");var loading_spinner=__webpack_require__("./node_modules/@elastic/eui/es/components/loading/loading_spinner.js"),text_text=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),util=__webpack_require__("./src/app/util.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),ts4nfdiDescriptionStyle=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/style/ts4nfdiStyles/ts4nfdiDescriptionStyle.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(ts4nfdiDescriptionStyle.A,options);ts4nfdiDescriptionStyle.A&&ts4nfdiDescriptionStyle.A.locals&&ts4nfdiDescriptionStyle.A.locals;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function DescriptionPresentation(props){const{descText,description,isLoading,error,className}=props,finalClassName=className||"ts4nfdi-description-style";return(0,jsx_runtime.jsx)("div",{className:finalClassName,children:isLoading?(0,jsx_runtime.jsx)(loading_spinner.V,{size:"s"}):error?(0,jsx_runtime.jsx)(text_text.b,{children:(0,util.lr)(error,"description")}):(0,jsx_runtime.jsx)(text_text.b,{children:descText||description})})}DescriptionPresentation.displayName="DescriptionPresentation",DescriptionPresentation.__docgenInfo={description:"",methods:[],displayName:"DescriptionPresentation",props:{descText:{required:!1,tsType:{name:"string"},description:"Set your own text manually that overwrites the text fetched from the API"},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},description:{required:!0,tsType:{name:"string"},description:""},isLoading:{required:!1,tsType:{name:"boolean"},description:""},error:{required:!1,tsType:{name:"union",raw:"string | unknown",elements:[{name:"string"},{name:"unknown"}]},description:""}}}},"./src/components/widgets/MetadataWidget/DescriptionWidget/DescriptionWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefiningOntologyUnavailable:()=>DefiningOntologyUnavailable,DescriptionWidget1:()=>DescriptionWidget1,ErrorFetchingData:()=>ErrorFetchingData,SelectingDefiningOntology:()=>SelectingDefiningOntology,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DescriptionWidget_stories});var DescriptionWidget=__webpack_require__("./src/components/widgets/MetadataWidget/DescriptionWidget/DescriptionWidget.tsx"),storyArgs=__webpack_require__("./src/stories/storyArgs.ts"),globals=__webpack_require__("./src/app/globals.ts");const DescriptionWidgetStoryArgTypes={...storyArgs.dg,...storyArgs.wT,...storyArgs.vZ,...storyArgs.$M,...storyArgs.j0,...storyArgs.lK,...storyArgs.ch,...storyArgs.RY,...storyArgs.q4},DescriptionWidget1={args:{iri:"http://purl.obolibrary.org/obo/NCIT_C2985",api:globals.RC,ontologyId:"ncit",thingType:"term",parameter:"collection=nfdi4health"}},SelectingDefiningOntology={args:{api:globals.wS,iri:"http://purl.obolibrary.org/obo/IAO_0000631",thingType:"",parameter:""}},DefiningOntologyUnavailable={args:{api:globals.wS,iri:"http://identifiers.org/uniprot/Q9VAM9",thingType:"term",parameter:""}},ErrorFetchingData={args:{api:globals.wS,iri:"http://identifiers.org/uniprot/Q9VA",thingType:"term",parameter:""}};var widgetDescriptions=__webpack_require__("./src/app/widgetDescriptions.ts");const DescriptionWidget_stories={title:"Entity Metadata/DescriptionWidget",component:DescriptionWidget.l,parameters:{layout:"centered",docs:{description:{component:widgetDescriptions.Fe}}},argTypes:DescriptionWidgetStoryArgTypes,args:{api:"",iri:"",useLegacy:!0,ontologyId:"",thingType:"term",descText:"",color:"",className:"",parameter:"collection=nfdi4health"}},__namedExportsOrder=["DescriptionWidget1","SelectingDefiningOntology","DefiningOntologyUnavailable","ErrorFetchingData"]},"./src/components/widgets/MetadataWidget/DescriptionWidget/DescriptionWidget.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>DescriptionWidget});__webpack_require__("./node_modules/react/index.js");var react_query__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-query/es/index.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),_api_OlsApi__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/api/OlsApi.ts"),_DescriptionPresentation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/widgets/MetadataWidget/DescriptionWidget/DescriptionPresentation.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));const NO_DESCRIPTION="No description available.";function DescriptionWidget(props){const{api,ontologyId,iri,descText,thingType,parameter,useLegacy,className,...rest}=props,olsApi=new _api_OlsApi__WEBPACK_IMPORTED_MODULE_2__.l(api),{data,isLoading,isError,error}=(0,react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)(["description",api,parameter,thingType,iri,ontologyId,useLegacy],(async()=>olsApi.getThingObject(iri,thingType,ontologyId,parameter,useLegacy)));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_DescriptionPresentation__WEBPACK_IMPORTED_MODULE_3__.D,{description:data?data.getDescription():NO_DESCRIPTION,descText,className,isLoading,error:isError?error:null,...rest})}function WrappedDescriptionWidget(props){const queryClient=new react_query__WEBPACK_IMPORTED_MODULE_1__.QueryClient;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_6__.l,{colorMode:"light",globalStyles:!1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_query__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider,{client:queryClient,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(DescriptionWidget,{api:props.api,ontologyId:props.ontologyId,iri:props.iri,descText:props.descText,thingType:props.thingType,parameter:props.parameter,color:props.color,useLegacy:props.useLegacy,className:props.className})})})}DescriptionWidget.displayName="DescriptionWidget",WrappedDescriptionWidget.displayName="WrappedDescriptionWidget",DescriptionWidget.__docgenInfo={description:"",methods:[],displayName:"DescriptionWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call."},thingType:{required:!1,tsType:{name:"thingTypeNames[number]",raw:"typeof thingTypeNames[number]"},description:"Sets the type of the thing whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!1,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},parameter:{required:!1,tsType:{name:"string"},description:""},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."},descText:{required:!1,tsType:{name:"string"},description:"Set your own text manually that overwrites the text fetched from the API"},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},color:{required:!1,tsType:{name:"union",raw:"EuiLinkColor | string",elements:[{name:"EuiLinkColor"},{name:"string"}]},description:"Color of the text, names, hex or rgb"}}}}}]);