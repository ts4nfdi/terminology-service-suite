"use strict";(self.webpackChunk_ts4nfdi_terminology_service_suite=self.webpackChunk_ts4nfdi_terminology_service_suite||[]).push([[5274],{"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/style/ts4nfdiStyles/ts4nfdiCrossRefStyle.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'.ts4nfdi-crossRef-style * {\n  font-family: "Inter", BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n}\n',"",{version:3,sources:["webpack://./src/style/ts4nfdiStyles/ts4nfdiCrossRefStyle.css"],names:[],mappings:"AAAA;EACE,sEAAsE;AACxE",sourcesContent:['.ts4nfdi-crossRef-style * {\n  font-family: "Inter", BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/components/widgets/MetadataWidget/TabWidget/CrossRefWidget/CrossRefTabPresentation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>CrossRefTabPresentation});__webpack_require__("./node_modules/react/index.js");var loading_spinner=__webpack_require__("./node_modules/@elastic/eui/es/components/loading/loading_spinner.js"),text_text=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),flex_item=__webpack_require__("./node_modules/@elastic/eui/es/components/flex/flex_item.js"),panel=__webpack_require__("./node_modules/@elastic/eui/es/components/panel/panel.js"),flex_group=__webpack_require__("./node_modules/@elastic/eui/es/components/flex/flex_group.js"),util=__webpack_require__("./src/app/util.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),ts4nfdiCrossRefStyle=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/style/ts4nfdiStyles/ts4nfdiCrossRefStyle.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(ts4nfdiCrossRefStyle.A,options);ts4nfdiCrossRefStyle.A&&ts4nfdiCrossRefStyle.A.locals&&ts4nfdiCrossRefStyle.A.locals;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function CrossRefTabPresentation(props){const finalClassName=props.className||"ts4nfdi-altNameTab-style";return(0,jsx_runtime.jsx)("div",{className:finalClassName,children:(0,jsx_runtime.jsx)(panel.K6,{children:(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(flex_group.cZ,{style:{padding:7},direction:"column",children:function renderCrossRefs(crossrefs){return props.isLoading?(0,jsx_runtime.jsx)(loading_spinner.V,{}):(props.error&&(text_text.b,(0,util.lr)(props.error,"cross references")),crossrefs&&crossrefs.length>0?crossrefs?.map(((item,index)=>(0,jsx_runtime.jsx)(flex_item.a,{children:item},index))):(0,jsx_runtime.jsx)(text_text.b,{children:"No cross references exist."}))}(props.crossrefs)})})})})}CrossRefTabPresentation.displayName="CrossRefTabPresentation",CrossRefTabPresentation.__docgenInfo={description:"",methods:[],displayName:"CrossRefTabPresentation",props:{className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},crossrefs:{required:!0,tsType:{name:"Array",elements:[{name:"any"}],raw:"any[]"},description:""},isLoading:{required:!1,tsType:{name:"boolean"},description:""},error:{required:!1,tsType:{name:"union",raw:"string | unknown",elements:[{name:"string"},{name:"unknown"}]},description:""}}}},"./src/components/widgets/MetadataWidget/TabWidget/CrossRefWidget/CrossRefTabWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CrossRefTabWidget1:()=>CrossRefTabWidget1,DefiningOntologyUnavailable:()=>DefiningOntologyUnavailable,SelectingDefiningOntology:()=>SelectingDefiningOntology,__namedExportsOrder:()=>__namedExportsOrder,default:()=>CrossRefTabWidget_stories});var CrossRefTabWidget=__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/CrossRefWidget/CrossRefTabWidget.tsx"),storyArgs=__webpack_require__("./src/stories/storyArgs.ts"),globals=__webpack_require__("./src/app/globals.ts");const CrossRefWidgetStoryArgTypes={...storyArgs.dg,...storyArgs.j0,...storyArgs.$M,...storyArgs.KV,...storyArgs.ch,...storyArgs.lK},CrossRefTabWidget1={args:{iri:"http://purl.obolibrary.org/obo/RXNO_0000138",api:globals.wS,entityType:"term",ontologyId:"rxno",parameter:""}},SelectingDefiningOntology={args:{api:globals.wS,iri:"http://purl.obolibrary.org/obo/IAO_0000631",entityType:"term",parameter:""}},DefiningOntologyUnavailable={args:{api:globals.wS,iri:"http://identifiers.org/uniprot/Q9VAM9",entityType:"term",parameter:""}};var widgetDescriptions=__webpack_require__("./src/app/widgetDescriptions.ts");const CrossRefTabWidget_stories={title:"Additional Entity Metadata/CrossRefTabWidget",component:CrossRefTabWidget.z,parameters:{layout:"centered",docs:{description:{component:widgetDescriptions.nm}}},argTypes:CrossRefWidgetStoryArgTypes,args:{api:"",iri:"",useLegacy:!0,ontologyId:"",entityType:"",parameter:"collection=nfdi4health"}},__namedExportsOrder=["CrossRefTabWidget1","SelectingDefiningOntology","DefiningOntologyUnavailable"]},"./src/components/widgets/MetadataWidget/TabWidget/CrossRefWidget/CrossRefTabWidget.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>CrossRefTabWidget});__webpack_require__("./node_modules/react/index.js");var _elastic_eui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),_api_OlsApi__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/api/OlsApi.ts"),react_query__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-query/es/index.js"),_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/model/ModelTypeCheck.ts"),_CrossRefTabPresentation__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/CrossRefWidget/CrossRefTabPresentation.tsx"),_model_Reified__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/model/Reified.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));function CrossRefTabWidget(props){const{iri,api,parameter,entityType,ontologyId,useLegacy,className}=props,olsApi=new _api_OlsApi__WEBPACK_IMPORTED_MODULE_1__.l(api),{data,isLoading,error}=(0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)(["crossRefTab",api,parameter,entityType,iri,ontologyId,useLegacy],(async()=>olsApi.getEntityObject(iri,entityType,ontologyId,parameter,useLegacy)));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_CrossRefTabPresentation__WEBPACK_IMPORTED_MODULE_4__.t,{crossrefs:data&&(0,_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_3__.Qg)(data)?_model_Reified__WEBPACK_IMPORTED_MODULE_7__.A.fromJson(data.getCrossReferences()).map((value=>value.value)):[],isLoading,error,className})}function WrappedCrossRefTabWidget(props){const queryClient=new react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClient;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_8__.l,{colorMode:"light",globalStyles:!1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClientProvider,{client:queryClient,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(CrossRefTabWidget,{iri:props.iri,api:props.api,ontologyId:props.ontologyId,entityType:props.entityType,parameter:props.parameter,useLegacy:props.useLegacy,className:props.className})})})}CrossRefTabWidget.displayName="CrossRefTabWidget",WrappedCrossRefTabWidget.displayName="WrappedCrossRefTabWidget",CrossRefTabWidget.__docgenInfo={description:"",methods:[],displayName:"CrossRefTabWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call."},entityType:{required:!1,tsType:{name:"entityTypeNames[number]",raw:"typeof entityTypeNames[number]"},description:"Sets the type of the entity whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},parameter:{required:!1,tsType:{name:"string"},description:"Additional parameters to pass to the API.\n\nEach parameter can be combined via\nthe special character <i><b>&</b></i>. The values of a parameter key can be combined with a comma sign\n<i><b>,</b></i>. The following keys could be used:<br/> <br/>\n <table>\n <thead><tr><th>Parameter</th><th>Description</th></tr></thead>\n <tr><td>lang</td><td>Set the language for the response e.g. <b><i>en</i></b>, <b><i>de</i></b>, <b><i>fr</i></b>. The default value is <b><i>en</i></b>.</td></tr>\n <tr><td>collection</td><td>Restrict a search to a terminology subset e.g. <b><i>collection=nfdi4health</i></b></td></tr>\n <tr><td>database</td><td>Restrict a search via the API Gateway to specific terminology software stacks, choose from <b><i>ols</i></b>, <b><i>ontoportal</i></b>, or <b><i>skosmos</i></b></td></tr>\n</table>"},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"}}}}}]);