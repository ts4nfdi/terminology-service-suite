"use client";import{b as y}from"./iframe-wk1mlfou.js";import{u as f}from"./useQuery-wZqAoEXu.js";import{D as h}from"./DescriptionPresentation-DdGpmRq9.js";import{O as T}from"./OlsThingApi-BVYwTFYO.js";const w="No description available.";function I(a){const{api:e,ontologyId:t,iri:i,descText:p,thingType:r,parameter:n,useLegacy:s,className:c,...d}=a,l=new T(e),{data:o,isLoading:m,isError:u,error:g}=f(["description",e,n,r,i,t,s],async()=>l.getThingObject(i,r,t,n,s));return y.jsx(h,{description:o?o.getDescription():w,descText:p,className:c,isLoading:m,error:u?g:null,...d})}I.__docgenInfo={description:"",methods:[],displayName:"DescriptionWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call."},thingType:{required:!1,tsType:{name:"unknown[number]",raw:"(typeof thingTypeNames)[number]"},description:"Sets the type of the thing whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!1,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},parameter:{required:!1,tsType:{name:"string"},description:""},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."},descText:{required:!1,tsType:{name:"string"},description:"Set your own text manually that overwrites the text fetched from the API"},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},color:{required:!1,tsType:{name:"union",raw:"EuiLinkColor | string",elements:[{name:"EuiLinkColor"},{name:"string"}]},description:"Color of the text, names, hex or rgb"}}};export{I as D};
