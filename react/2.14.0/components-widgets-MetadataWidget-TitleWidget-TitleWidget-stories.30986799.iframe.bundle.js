"use strict";(self.webpackChunk_ts4nfdi_terminology_service_suite=self.webpackChunk_ts4nfdi_terminology_service_suite||[]).push([[35763],{"./src/components/widgets/MetadataWidget/TitleWidget/TitleWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefiningOntologyUnavailable:()=>DefiningOntologyUnavailable,IncorrectIriWithDefaultValue:()=>IncorrectIriWithDefaultValue,IncorrectIriWithoutDefaultValue:()=>IncorrectIriWithoutDefaultValue,SelectingDefiningOntology:()=>SelectingDefiningOntology,TitleWidgetDefault:()=>TitleWidgetDefault,TitleWidgetWithStyles:()=>TitleWidgetWithStyles,TitleWidgetWithTitleText:()=>TitleWidgetWithTitleText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TitleWidget_stories});var TitleWidget=__webpack_require__("./src/components/widgets/MetadataWidget/TitleWidget/TitleWidget.tsx"),globals=__webpack_require__("./src/app/globals.ts"),storyArgs=__webpack_require__("./src/stories/storyArgs.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),titleStyles=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/style/titleStyles.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(titleStyles.A,options);titleStyles.A&&titleStyles.A.locals&&titleStyles.A.locals;const TitleWidgetStoryArgTypes={...storyArgs.dg,...storyArgs.$M,...storyArgs.RY,...storyArgs.j0,...storyArgs.ch,...storyArgs.m7,...storyArgs.Lp,...storyArgs.lK,...storyArgs.q4},TitleWidgetDefault={args:{iri:"http://purl.obolibrary.org/obo/NCIT_C2985",api:globals.gA,ontologyId:"ncit",thingType:"term"}},SelectingDefiningOntology={args:{api:globals.wS,iri:"http://purl.obolibrary.org/obo/IAO_0000631",thingType:"term",parameter:""}},TitleWidgetWithTitleText={args:{iri:"http://purl.obolibrary.org/obo/NCIT_C29",api:globals.gA,ontologyId:"ncit",thingType:"term",titleText:"title text"}},IncorrectIriWithDefaultValue={args:{iri:"http://purl.obolibrary.org/obo/NCIT_C29",api:globals.gA,ontologyId:"ncit",thingType:"term",defaultValue:"default value"}},IncorrectIriWithoutDefaultValue={args:{iri:"http://purl.obolibrary.org/obo/NCIT_C29",api:globals.gA,ontologyId:"ncit",thingType:"term"}},DefiningOntologyUnavailable={args:{api:globals.wS,iri:"http://identifiers.org/uniprot/Q9VAM9",thingType:"term",parameter:""}},TitleWidgetWithStyles={args:{iri:"http://purl.obolibrary.org/obo/NCIT_C2985",api:globals.gA,ontologyId:"ncit",thingType:"term",className:"title-styles"}},TitleWidget_stories={title:"TitleWidget",component:TitleWidget.N,parameters:{layout:"centered"},argTypes:TitleWidgetStoryArgTypes,args:{api:"",useLegacy:!0,iri:"",ontologyId:"",thingType:"",titleText:"",defaultValue:"",className:"",parameter:"collection=nfdi4health"}},__namedExportsOrder=["TitleWidgetDefault","TitleWidgetWithTitleText","IncorrectIriWithDefaultValue","IncorrectIriWithoutDefaultValue","SelectingDefiningOntology","DefiningOntologyUnavailable","TitleWidgetWithStyles"]},"./src/components/widgets/MetadataWidget/TitleWidget/TitlePresentation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>TitlePresentation});__webpack_require__("./node_modules/react/index.js");var _elastic_eui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function TitlePresentation(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_2__.b,{className:props.className,children:props.titleText||props.title})}TitlePresentation.displayName="TitlePresentation",TitlePresentation.__docgenInfo={description:"",methods:[],displayName:"TitlePresentation",props:{titleText:{required:!1,tsType:{name:"string"},description:"Set your own text manually that overwrites the text fetched from the API"},title:{required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},defaultValue:{required:!1,tsType:{name:"string"},description:"Set the default text shown if the API fails to retrieve one."}}}},"./src/components/widgets/MetadataWidget/TitleWidget/TitleWidget.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>TitleWidget});__webpack_require__("./node_modules/react/index.js");var react_query__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-query/es/index.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@elastic/eui/es/components/loading/loading_spinner.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),_api_OlsApi__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/api/OlsApi.ts"),_app_util__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/app/util.ts"),_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/model/ModelTypeCheck.ts"),_TitlePresentation__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/widgets/MetadataWidget/TitleWidget/TitlePresentation.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));function TitleWidget(props){const{iri,ontologyId,api,titleText,thingType,parameter,useLegacy,defaultValue,className}=props,olsApi=new _api_OlsApi__WEBPACK_IMPORTED_MODULE_2__.l(api),finalClassName=className||"default-class",{data,isLoading,isSuccess,isError,error}=(0,react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)(["titleData",api,parameter,thingType,iri,ontologyId,useLegacy],(async()=>olsApi.getThingObject(iri,thingType,ontologyId,parameter,useLegacy)));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[titleText&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_TitlePresentation__WEBPACK_IMPORTED_MODULE_5__.B,{titleText,className:finalClassName}),!titleText&&isSuccess&&data&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_TitlePresentation__WEBPACK_IMPORTED_MODULE_5__.B,{title:(0,_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_4__.io)(data)?data.getName():data.getLabel(),className:finalClassName}),!titleText&&isLoading&&(defaultValue?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_TitlePresentation__WEBPACK_IMPORTED_MODULE_5__.B,{titleText:defaultValue,className:finalClassName}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_8__.V,{size:"s"})),!titleText&&isError&&(defaultValue?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_TitlePresentation__WEBPACK_IMPORTED_MODULE_5__.B,{titleText:defaultValue,className:finalClassName}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_9__.b,{children:(0,_app_util__WEBPACK_IMPORTED_MODULE_3__.lr)(error,"title")}))]})}function WrappedTitleWidget(props){const queryClient=new react_query__WEBPACK_IMPORTED_MODULE_1__.QueryClient;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_10__.l,{colorMode:"light",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_query__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider,{client:queryClient,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(TitleWidget,{api:props.api,thingType:props.thingType,iri:props.iri,ontologyId:props.ontologyId,titleText:props.titleText,parameter:props.parameter,useLegacy:props.useLegacy,defaultValue:props.defaultValue,className:props.className})})})}WrappedTitleWidget.displayName="WrappedTitleWidget",TitleWidget.__docgenInfo={description:"",methods:[],displayName:"TitleWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call.\n- **Official OLS4 API of EMBL-EBI**: [https://www.ebi.ac.uk/ols4/api/](https://www.ebi.ac.uk/ols4/api/)\n- **Official SemLookP API (based on OLS3)**: [https://semanticlookup.zbmed.de/ols/api/](https://semanticlookup.zbmed.de/ols/api/)\n- **Improved SemLookP API (beta version)**: [https://semanticlookup.zbmed.de/api/](https://semanticlookup.zbmed.de/api/)\n- **OLS4 API NFDI4Health collection**: [https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/](https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/)\n- **TIB Terminology Service**: [https://service.tib.eu/ts4tib/api/](https://service.tib.eu/ts4tib/api/)\n- **TS4NFDI Gateway**: [https://ts4nfdi-api-gateway.prod.km.k8s.zbmed.de/api-gateway/](https://ts4nfdi-api-gateway.prod.km.k8s.zbmed.de/api-gateway/)"},thingType:{required:!1,tsType:{name:"thingTypeNames[number]",raw:"typeof thingTypeNames[number]"},description:"Sets the type of the thing whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!1,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},parameter:{required:!1,tsType:{name:"string"},description:"Additional parameters to pass to the API.\n\nThis parameters can be used to filter the search results. Each parameter can be combined via\nthe special character <i><b>&</b></i>. The values of a parameter key can be combined with a comma sign\n<i><b>,</b></i>. The following keys could be used:<br/> <br/>\n <table>\n <thead><tr><th>Parameter</th><th>Description</th></tr></thead>\n <tr><td>ontology</td><td>Restrict a search to a set of ontologies e.g. ontology=uberon,mesh</td></tr>\n <tr><td>type</td><td>Restrict a search to an entity type, one of {class,property,individual,ontology}</td></tr>\n <tr><td>slim</td><td>Restrict a search to a particular set of slims by name</td></tr>\n <tr><td>fieldList</td><td>Specify the fields to return. Defaults are <b>{iri,label,short_form,obo_id,ontology_name,ontology_prefix,description,type}</b></td></tr>\n <tr><td>obsoletes</td><td>Set to true to include obsolete terms in the results</td></tr>\n <tr><td>local</td><td>Set to true to only return terms that are in a defining ontology, e.g. only return matches to gene ontology terms in the gene ontology, and exclude ontologies where those terms are also referenced</td></tr>\n <tr><td>childrenOf</td><td>You can restrict a search to all children of a given term. Supply a list of IRI for the terms that you want to search under (subclassOf/is-a relation only)</td></tr>\n <tr><td>allChildrenOf</td><td>You can restrict a search to all children of a given term. Supply a list of IRI for the terms that you want to search under (subclassOf/is-a plus any hierarchical/transitive properties like 'part of' or 'develops from')</td></tr>\n <tr><td>rows</td><td>Set results per page</td></tr>\n <tr><td>start</td><td>Set the results page number</td></tr>\n <tr><td>lang</td><td>Set the language for the response e.g. <b><i>en</i></b>, <b><i>de</i></b>, <b><i>fr</i></b>. The default value is <b><i>en</i></b>.</td></tr>\n <tr><td>collection</td><td>Restrict a search to a terminology subset e.g. <b><i>collection=nfdi4health</i></b></td></tr>\n <tr><td>database</td><td>Restrict a search via the API Gateway to specific terminology software stacks, choose from <b><i>ols</i></b>, <b><i>ontoportal</i></b>, or <b><i>skosmos</i></b></td></tr>\n</table>"},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."},titleText:{required:!1,tsType:{name:"string"},description:"Set your own text manually that overwrites the text fetched from the API"},defaultValue:{required:!1,tsType:{name:"string"},description:"Set the default text shown if the API fails to retrieve one."},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"}}}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/style/titleStyles.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".title-styles {\n  font-weight: bold;\n}","",{version:3,sources:["webpack://./src/style/titleStyles.css"],names:[],mappings:"AAAA;EACE,iBAAiB;AACnB",sourcesContent:[".title-styles {\n  font-weight: bold;\n}"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);