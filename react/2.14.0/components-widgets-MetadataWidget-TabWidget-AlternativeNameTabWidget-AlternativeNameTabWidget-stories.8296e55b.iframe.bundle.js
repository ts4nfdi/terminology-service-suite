"use strict";(self.webpackChunk_ts4nfdi_terminology_service_suite=self.webpackChunk_ts4nfdi_terminology_service_suite||[]).push([[92953],{"./src/components/widgets/MetadataWidget/TabWidget/AlternativeNameTabWidget/AlternativeNameTabWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlternativeNameTabWidget1:()=>AlternativeNameTabWidget1,DefiningOntologyUnavailable:()=>DefiningOntologyUnavailable,SelectingDefiningOntology:()=>SelectingDefiningOntology,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AlternativeNameTabWidget_stories});var AlternativeNameTabWidget=__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/AlternativeNameTabWidget/AlternativeNameTabWidget.tsx"),globals=__webpack_require__("./src/app/globals.ts"),storyArgs=__webpack_require__("./src/stories/storyArgs.ts");const AlternativeNameTabWidgetStoryArgTypes={...storyArgs.dg,...storyArgs.j0,...storyArgs.$M,...storyArgs.KV,...storyArgs.ch,...storyArgs.lK},AlternativeNameTabWidget1={args:{iri:"http://purl.obolibrary.org/obo/NCIT_C2985",api:globals.gA,entityType:"term",ontologyId:"ncit"}},SelectingDefiningOntology={args:{api:globals.wS,iri:"http://purl.obolibrary.org/obo/IAO_0000631",entityType:"term",parameter:""}},DefiningOntologyUnavailable={args:{api:globals.wS,iri:"http://identifiers.org/uniprot/Q9VAM9",entityType:"term",parameter:""}},AlternativeNameTabWidget_stories={title:"AlternativeNameTabWidget",component:AlternativeNameTabWidget.W,parameters:{layout:"centered"},argTypes:AlternativeNameTabWidgetStoryArgTypes,args:{api:"",useLegacy:!0,iri:"",ontologyId:"",entityType:"",parameter:"collection=nfdi4health"}},__namedExportsOrder=["AlternativeNameTabWidget1","SelectingDefiningOntology","DefiningOntologyUnavailable"]},"./src/components/widgets/MetadataWidget/TabWidget/AlternativeNameTabWidget/AlternativeNameTabPresentation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{O:()=>AlternativeNameTabPresentation});__webpack_require__("./node_modules/react/index.js");var _elastic_eui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@elastic/eui/es/components/flex/flex_item.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@elastic/eui/es/components/panel/panel.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@elastic/eui/es/components/flex/flex_group.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function AlternativeNameTabPresentation(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_4__.K6,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_5__.cZ,{style:{padding:10},direction:"column",children:function renderAltLabel(){return props.synonyms&&props.synonyms.length>0?props.synonyms.map(((value,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_2__.a,{children:value},value+index))):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_3__.b,{children:"No alternative names exist."})}()})})}AlternativeNameTabPresentation.displayName="AlternativeNameTabPresentation",AlternativeNameTabPresentation.__docgenInfo={description:"",methods:[],displayName:"AlternativeNameTabPresentation",props:{synonyms:{required:!0,tsType:{name:"Array",elements:[{name:"any"}],raw:"any[]"},description:""}}}},"./src/components/widgets/MetadataWidget/TabWidget/AlternativeNameTabWidget/AlternativeNameTabWidget.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>AlternativeNameTabWidget});__webpack_require__("./node_modules/react/index.js");var _elastic_eui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@elastic/eui/es/components/loading/loading_spinner.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@elastic/eui/es/components/text/text.js"),_elastic_eui__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@elastic/eui/es/components/provider/provider.js"),_api_OlsApi__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/api/OlsApi.ts"),react_query__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-query/es/index.js"),_app_util__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/app/util.ts"),_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/model/ModelTypeCheck.ts"),_AlternativeNameTabPresentation__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/widgets/MetadataWidget/TabWidget/AlternativeNameTabWidget/AlternativeNameTabPresentation.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=(__webpack_require__("./node_modules/react-dom/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));function AlternativeNameTabWidget(props){const{iri,api,parameter,entityType,ontologyId,useLegacy}=props,olsApi=new _api_OlsApi__WEBPACK_IMPORTED_MODULE_1__.l(api),{data,isLoading,isSuccess,isError,error}=(0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)(["alternativeNameTab",api,parameter,entityType,iri,ontologyId,useLegacy],(async()=>olsApi.getEntityObject(iri,entityType,ontologyId,parameter,useLegacy)));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[isSuccess&&data&&(0,_model_ModelTypeCheck__WEBPACK_IMPORTED_MODULE_4__.Qg)(data)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_AlternativeNameTabPresentation__WEBPACK_IMPORTED_MODULE_5__.O,{synonyms:data.getSynonyms().map((synonym=>synonym.value))}),isLoading&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_8__.V,{}),isError&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_9__.b,{children:(0,_app_util__WEBPACK_IMPORTED_MODULE_3__.lr)(error,"alternative names")})]})}function WrappedAlternativeNameTabWidget(props){const queryClient=new react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClient;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_elastic_eui__WEBPACK_IMPORTED_MODULE_10__.l,{colorMode:"light",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClientProvider,{client:queryClient,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(AlternativeNameTabWidget,{iri:props.iri,api:props.api,ontologyId:props.ontologyId,entityType:props.entityType,parameter:props.parameter})})})}WrappedAlternativeNameTabWidget.displayName="WrappedAlternativeNameTabWidget",AlternativeNameTabWidget.__docgenInfo={description:"",methods:[],displayName:"AlternativeNameTabWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call.\n- **Official OLS4 API of EMBL-EBI**: [https://www.ebi.ac.uk/ols4/api/](https://www.ebi.ac.uk/ols4/api/)\n- **Official SemLookP API (based on OLS3)**: [https://semanticlookup.zbmed.de/ols/api/](https://semanticlookup.zbmed.de/ols/api/)\n- **Improved SemLookP API (beta version)**: [https://semanticlookup.zbmed.de/api/](https://semanticlookup.zbmed.de/api/)\n- **OLS4 API NFDI4Health collection**: [https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/](https://ols4-nfdi4health.prod.km.k8s.zbmed.de/ols4/api/)\n- **TIB Terminology Service**: [https://service.tib.eu/ts4tib/api/](https://service.tib.eu/ts4tib/api/)\n- **TS4NFDI Gateway**: [https://ts4nfdi-api-gateway.prod.km.k8s.zbmed.de/api-gateway/](https://ts4nfdi-api-gateway.prod.km.k8s.zbmed.de/api-gateway/)"},entityType:{required:!1,tsType:{name:"entityTypeNames[number]",raw:"typeof entityTypeNames[number]"},description:"Sets the type of the entity whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},parameter:{required:!1,tsType:{name:"string"},description:"Additional parameters to pass to the API.\n\nEach parameter can be combined via\nthe special character <i><b>&</b></i>. The values of a parameter key can be combined with a comma sign\n<i><b>,</b></i>. The following keys could be used:<br/> <br/>\n <table>\n <thead><tr><th>Parameter</th><th>Description</th></tr></thead>\n <tr><td>lang</td><td>Set the language for the response e.g. <b><i>en</i></b>, <b><i>de</i></b>, <b><i>fr</i></b>. The default value is <b><i>en</i></b>.</td></tr>\n <tr><td>collection</td><td>Restrict a search to a terminology subset e.g. <b><i>collection=nfdi4health</i></b></td></tr>\n <tr><td>database</td><td>Restrict a search via the API Gateway to specific terminology software stacks, choose from <b><i>ols</i></b>, <b><i>ontoportal</i></b>, or <b><i>skosmos</i></b></td></tr>\n</table>"},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."}}}}}]);